// Generated by CIRCT circtorg-0.0.0-2220-ge81df61a7
module CSRGen(
  input                                                   stall,
  input  [2:0]                                            cmd,
  input  [31:0]                                           I,
                                                          pc,
                                                          addr,
                                                          inst,
  input                                                   illegal,
  input  [1:0]                                            st_type,
  input  [2:0]                                            ld_type,
  input                                                   pc_check,
  input  struct packed {logic valid; logic [31:0] data; } host_fromhost,
  input                                                   CLK,
                                                          RESET,
  output [31:0]                                           O,
  output                                                  expt,
  output [31:0]                                           evec,
                                                          epc,
                                                          host_tohost
);

  wire [31:0]      _GEN;
  reg  [31:0]      Register_inst2;
  wire             not_stall = ~stall;
  wire             _GEN_0 = pc_check & addr[1];
  wire [1:0]       _GEN_1 = {{|(addr[1:0])}, {1'h0}};
  wire [1:0]       _GEN_2 = {{addr[0]}, {_GEN_1[ld_type == 3'h1]}};
  wire [1:0]       _GEN_3 = {{addr[0]}, {_GEN_2[ld_type == 3'h2]}};
  wire             _GEN_4 = _GEN_3[ld_type == 3'h4];
  wire [1:0]       _GEN_5 = {{|(addr[1:0])}, {1'h0}};
  wire [1:0]       _GEN_6 = {{addr[0]}, {_GEN_5[st_type == 2'h1]}};
  wire             _GEN_7 = _GEN_6[st_type == 2'h2];
  reg  [1:0]       Register_inst6;
  wire             _GEN_8 = inst[29:28] <= Register_inst6;
  wire             _GEN_9 = cmd == 3'h1 | cmd[1] & (|(inst[19:15]));
  wire             _GEN_10 = cmd == 3'h4;
  wire             _GEN_11 = _GEN_10 & ~(inst[20]) & ~(inst[28]);
  wire             _GEN_12 = _GEN_10 & inst[20] & ~(inst[28]);
  wire             _GEN_13 =
    illegal | _GEN_0 | _GEN_4 | _GEN_7 | (|(cmd[1:0]))
    & ({inst[31:20] == 12'h300,
        inst[31:20] == 12'h781,
        inst[31:20] == 12'h780,
        inst[31:20] == 12'h344,
        inst[31:20] == 12'h343,
        inst[31:20] == 12'h342,
        inst[31:20] == 12'h341,
        inst[31:20] == 12'h340,
        inst[31:20] == 12'h741,
        inst[31:20] == 12'h701,
        inst[31:20] == 12'h321,
        inst[31:20] == 12'h304,
        inst[31:20] == 12'h302,
        inst[31:20] == 12'h301,
        inst[31:20] == 12'hF10,
        inst[31:20] == 12'hF01,
        inst[31:20] == 12'hF00,
        inst[31:20] == 12'h982,
        inst[31:20] == 12'h981,
        inst[31:20] == 12'h980,
        inst[31:20] == 12'h902,
        inst[31:20] == 12'h901,
        inst[31:20] == 12'h900,
        inst[31:20] == 12'hC82,
        inst[31:20] == 12'hC81,
        inst[31:20] == 12'hC80,
        inst[31:20] == 12'hC02,
        inst[31:20] == 12'hC01,
        inst[31:20] == 12'hC00} == 29'h0 | ~_GEN_8) | _GEN_9
    & ((&(inst[31:30])) | inst[31:20] == 12'h301 | inst[31:20] == 12'h302) | _GEN_10
    & ~_GEN_8 | _GEN_11 | _GEN_12;
  reg  [31:0]      Register_inst16;
  reg  [31:0]      Register_inst17;
  reg              Register_inst8;
  reg  [1:0]       Register_inst7;
  reg              Register_inst9;
  wire             is_mbadaddr = _GEN_0 | _GEN_4 | _GEN_7;
  reg  [31:0]      Register_inst18;
  reg              Register_inst10;
  reg              Register_inst12;
  reg              Register_inst11;
  reg              Register_inst13;
  reg  [31:0]      Register_inst0;
  reg  [31:0]      Register_inst1;
  reg  [31:0]      _GEN_14;
  always_comb begin
    _GEN_14 = Register_inst1;
    if (&Register_inst0)
      _GEN_14 = Register_inst1 + 32'h1;
  end // always_comb
  reg  [31:0]      Register_inst14;
  reg  [31:0]      Register_inst15;
  reg  [31:0]      Register_inst19;
  reg  [31:0]      Register_inst20;
  reg  [31:0]      _GEN_15;
  always_comb begin
    _GEN_15 = Register_inst20;
    if (host_fromhost.valid)
      _GEN_15 = host_fromhost.data;
  end // always_comb
  wire             is_inst_ret = inst != 32'h13 & (~_GEN_13 | _GEN_11 | _GEN_12) & ~stall;
  reg  [31:0]      Register_inst4;
  reg  [31:0]      _GEN_16;
  always_comb begin
    _GEN_16 = Register_inst4;
    if (is_inst_ret)
      _GEN_16 = Register_inst4 + 32'h1;
  end // always_comb
  reg  [31:0]      Register_inst3;
  reg  [31:0]      _GEN_17;
  always_comb begin
    _GEN_17 = Register_inst3;
    if (&Register_inst2)
      _GEN_17 = Register_inst3 + 32'h1;
  end // always_comb
  wire             is_inst_reth = is_inst_ret & (&Register_inst4);
  reg  [31:0]      Register_inst5;
  reg  [31:0]      _GEN_18;
  always_comb begin
    _GEN_18 = Register_inst5;
    if (is_inst_reth)
      _GEN_18 = Register_inst5 + 32'h1;
  end // always_comb
  reg  [31:0]      _GEN_19;
  reg  [31:0]      _GEN_20;
  reg              _GEN_21;
  reg              _GEN_22;
  reg              _GEN_23;
  reg              _GEN_24;
  reg              _GEN_25;
  reg              _GEN_26;
  reg              _GEN_27;
  reg              _GEN_28;
  reg              _GEN_29;
  reg              _GEN_30;
  reg              _GEN_31;
  reg              _GEN_32;
  reg              _GEN_33;
  reg              _GEN_34;
  reg              _GEN_35;
  reg              _GEN_36;
  reg              _GEN_37;
  reg              _GEN_38;
  reg              _GEN_39;
  reg              _GEN_40;
  reg              _GEN_41;
  reg              _GEN_42;
  reg              _GEN_43;
  reg              _GEN_44;
  reg              _GEN_45;
  reg              _GEN_46;
  reg              _GEN_47;
  reg              _GEN_48;
  reg              _GEN_49;
  reg              _GEN_50;
  reg              _GEN_51;
  reg              _GEN_52;
  reg              _GEN_53;
  reg              _GEN_54;
  reg              _GEN_55;
  reg              _GEN_56;
  reg              _GEN_57;
  reg              _GEN_58;
  reg              _GEN_59;
  reg              _GEN_60;
  reg              _GEN_61;
  reg              _GEN_62;
  reg              _GEN_63;
  reg              _GEN_64;
  reg              _GEN_65;
  reg              _GEN_66;
  reg              _GEN_67;
  reg              _GEN_68;
  reg              _GEN_69;
  reg              _GEN_70;
  reg              _GEN_71;
  reg              _GEN_72;
  reg              _GEN_73;
  reg              _GEN_74;
  reg              _GEN_75;
  reg              _GEN_76;
  reg              _GEN_77;
  reg              _GEN_78;
  reg              _GEN_79;
  reg              _GEN_80;
  reg              _GEN_81;
  reg              _GEN_82;
  reg              _GEN_83;
  reg              _GEN_84;
  reg              _GEN_85;
  reg              _GEN_86;
  reg              _GEN_87;
  reg              _GEN_88;
  reg              _GEN_89;
  reg              _GEN_90;
  reg              _GEN_91;
  reg              _GEN_92;
  reg              _GEN_93;
  reg              _GEN_94;
  reg              _GEN_95;
  reg              _GEN_96;
  reg              _GEN_97;
  reg              _GEN_98;
  reg              _GEN_99;
  reg              _GEN_100;
  reg              _GEN_101;
  reg              _GEN_102;
  reg              _GEN_103;
  reg              _GEN_104;
  reg              _GEN_105;
  reg              _GEN_106;
  reg              _GEN_107;
  reg              _GEN_108;
  reg              _GEN_109;
  reg              _GEN_110;
  reg              _GEN_111;
  reg              _GEN_112;
  reg              _GEN_113;
  reg              _GEN_114;
  reg              _GEN_115;
  reg              _GEN_116;
  reg              _GEN_117;
  reg              _GEN_118;
  reg              _GEN_119;
  reg              _GEN_120;
  reg              _GEN_121;
  reg              _GEN_122;
  reg              _GEN_123;
  reg              _GEN_124;
  reg              _GEN_125;
  reg              _GEN_126;
  reg              _GEN_127;
  reg              _GEN_128;
  reg              _GEN_129;
  reg              _GEN_130;
  reg              _GEN_131;
  reg              _GEN_132;
  reg              _GEN_133;
  reg              _GEN_134;
  reg              _GEN_135;
  reg              _GEN_136;
  reg              _GEN_137;
  reg              _GEN_138;
  reg              _GEN_139;
  reg              _GEN_140;
  reg              _GEN_141;
  reg              _GEN_142;
  reg              _GEN_143;
  reg              _GEN_144;
  reg              _GEN_145;
  reg              _GEN_146;
  reg              _GEN_147;
  reg              _GEN_148;
  reg              _GEN_149;
  reg              _GEN_150;
  reg              _GEN_151;
  reg              _GEN_152;
  reg              _GEN_153;
  reg              _GEN_154;
  reg              _GEN_155;
  reg              _GEN_156;
  reg              _GEN_157;
  reg              _GEN_158;
  reg              _GEN_159;
  reg              _GEN_160;
  reg              _GEN_161;
  reg              _GEN_162;
  reg              _GEN_163;
  reg              _GEN_164;
  reg              _GEN_165;
  reg              _GEN_166;
  reg              _GEN_167;
  reg              _GEN_168;
  reg              _GEN_169;
  reg              _GEN_170;
  reg              _GEN_171;
  reg              _GEN_172;
  reg              _GEN_173;
  reg              _GEN_174;
  reg              _GEN_175;
  reg              _GEN_176;
  reg              _GEN_177;
  reg              _GEN_178;
  reg              _GEN_179;
  reg              _GEN_180;
  reg              _GEN_181;
  reg              _GEN_182;
  reg              _GEN_183;
  reg              _GEN_184;
  reg              _GEN_185;
  reg              _GEN_186;
  reg              _GEN_187;
  reg              _GEN_188;
  reg              _GEN_189;
  reg              _GEN_190;
  reg              _GEN_191;
  reg              _GEN_192;
  reg              _GEN_193;
  reg              _GEN_194;
  reg              _GEN_195;
  reg              _GEN_196;
  reg              _GEN_197;
  reg              _GEN_198;
  reg              _GEN_199;
  reg              _GEN_200;
  reg              _GEN_201;
  reg              _GEN_202;
  reg              _GEN_203;
  reg              _GEN_204;
  reg              _GEN_205;
  reg              _GEN_206;
  reg              _GEN_207;
  reg              _GEN_208;
  reg              _GEN_209;
  reg              _GEN_210;
  reg              _GEN_211;
  reg              _GEN_212;
  reg              _GEN_213;
  reg              _GEN_214;
  reg              _GEN_215;
  reg              _GEN_216;
  reg              _GEN_217;
  reg              _GEN_218;
  reg              _GEN_219;
  reg              _GEN_220;
  reg              _GEN_221;
  reg              _GEN_222;
  reg              _GEN_223;
  reg              _GEN_224;
  reg              _GEN_225;
  reg              _GEN_226;
  reg              _GEN_227;
  reg              _GEN_228;
  reg              _GEN_229;
  reg              _GEN_230;
  reg              _GEN_231;
  reg              _GEN_232;
  reg              _GEN_233;
  reg              _GEN_234;
  reg              _GEN_235;
  reg              _GEN_236;
  reg              _GEN_237;
  reg              _GEN_238;
  reg              _GEN_239;
  reg              _GEN_240;
  reg              _GEN_241;
  reg              _GEN_242;
  reg              _GEN_243;
  reg              _GEN_244;
  reg              _GEN_245;
  reg              _GEN_246;
  reg              _GEN_247;
  reg              _GEN_248;
  reg              _GEN_249;
  reg              _GEN_250;
  reg              _GEN_251;
  reg              _GEN_252;
  reg              _GEN_253;
  reg              _GEN_254;
  reg              _GEN_255;
  reg              _GEN_256;
  reg              _GEN_257;
  reg              _GEN_258;
  reg              _GEN_259;
  reg              _GEN_260;
  reg              _GEN_261;
  reg              _GEN_262;
  reg              _GEN_263;
  reg              _GEN_264;
  reg              _GEN_265;
  reg              _GEN_266;
  reg              _GEN_267;
  reg              _GEN_268;
  reg              _GEN_269;
  reg              _GEN_270;
  reg              _GEN_271;
  reg              _GEN_272;
  reg              _GEN_273;
  reg              _GEN_274;
  reg              _GEN_275;
  reg              _GEN_276;
  reg              _GEN_277;
  reg              _GEN_278;
  reg              _GEN_279;
  reg              _GEN_280;
  reg              _GEN_281;
  reg              _GEN_282;
  reg              _GEN_283;
  reg              _GEN_284;
  reg              _GEN_285;
  reg              _GEN_286;
  reg              _GEN_287;
  reg              _GEN_288;
  reg              _GEN_289;
  reg              _GEN_290;
  reg              _GEN_291;
  reg              _GEN_292;
  reg              _GEN_293;
  reg              _GEN_294;
  reg              _GEN_295;
  reg              _GEN_296;
  reg              _GEN_297;
  reg              _GEN_298;
  reg              _GEN_299;
  reg              _GEN_300;
  reg              _GEN_301;
  reg              _GEN_302;
  reg              _GEN_303;
  reg              _GEN_304;
  reg              _GEN_305;
  reg              _GEN_306;
  reg              _GEN_307;
  reg              _GEN_308;
  reg              _GEN_309;
  reg              _GEN_310;
  reg              _GEN_311;
  reg              _GEN_312;
  reg              _GEN_313;
  reg              _GEN_314;
  reg              _GEN_315;
  reg              _GEN_316;
  reg              _GEN_317;
  reg              _GEN_318;
  reg              _GEN_319;
  reg              _GEN_320;
  reg              _GEN_321;
  reg              _GEN_322;
  reg              _GEN_323;
  reg              _GEN_324;
  reg              _GEN_325;
  reg              _GEN_326;
  reg              _GEN_327;
  reg              _GEN_328;
  reg              _GEN_329;
  reg              _GEN_330;
  reg              _GEN_331;
  reg              _GEN_332;
  reg              _GEN_333;
  reg              _GEN_334;
  reg              _GEN_335;
  reg              _GEN_336;
  reg              _GEN_337;
  reg              _GEN_338;
  reg              _GEN_339;
  reg              _GEN_340;
  reg              _GEN_341;
  reg              _GEN_342;
  reg              _GEN_343;
  reg              _GEN_344;
  reg              _GEN_345;
  reg              _GEN_346;
  reg              _GEN_347;
  reg              _GEN_348;
  reg              _GEN_349;
  reg              _GEN_350;
  reg              _GEN_351;
  reg              _GEN_352;
  reg              _GEN_353;
  reg              _GEN_354;
  reg              _GEN_355;
  reg              _GEN_356;
  reg              _GEN_357;
  reg              _GEN_358;
  reg              _GEN_359;
  reg              _GEN_360;
  reg              _GEN_361;
  reg              _GEN_362;
  reg              _GEN_363;
  reg              _GEN_364;
  reg              _GEN_365;
  reg              _GEN_366;
  reg              _GEN_367;
  reg              _GEN_368;
  reg              _GEN_369;
  reg              _GEN_370;
  reg              _GEN_371;
  reg              _GEN_372;
  reg              _GEN_373;
  reg              _GEN_374;
  reg              _GEN_375;
  reg              _GEN_376;
  reg              _GEN_377;
  reg              _GEN_378;
  reg              _GEN_379;
  reg              _GEN_380;
  reg              _GEN_381;
  reg              _GEN_382;
  wire [1:0][31:0] _GEN_383 = {{I}, {32'h0}};
  wire [1:0][31:0] _GEN_384 = {{_GEN | I}, {_GEN_383[cmd == 3'h1]}};
  wire [1:0][31:0] _GEN_385 = {{_GEN & ~I}, {_GEN_384[cmd == 3'h2]}};
  wire [31:0]      _GEN_386 = _GEN_385[cmd == 3'h3];
  wire [31:0]      _GEN_387 = Register_inst0 + 32'h1;
  wire [31:0]      _GEN_388 = Register_inst2 + 32'h1;
  always_comb begin
    _GEN_19 = Register_inst16;
    _GEN_20 = Register_inst17;
    _GEN_21 = Register_inst6[0];
    _GEN_22 = Register_inst6[1];
    _GEN_23 = Register_inst8;
    _GEN_24 = Register_inst7[0];
    _GEN_25 = Register_inst7[1];
    _GEN_26 = Register_inst9;
    _GEN_27 = Register_inst18[0];
    _GEN_28 = Register_inst18[1];
    _GEN_29 = Register_inst18[2];
    _GEN_30 = Register_inst18[3];
    _GEN_31 = Register_inst18[4];
    _GEN_32 = Register_inst18[5];
    _GEN_33 = Register_inst18[6];
    _GEN_34 = Register_inst18[7];
    _GEN_35 = Register_inst18[8];
    _GEN_36 = Register_inst18[9];
    _GEN_37 = Register_inst18[10];
    _GEN_38 = Register_inst18[11];
    _GEN_39 = Register_inst18[12];
    _GEN_40 = Register_inst18[13];
    _GEN_41 = Register_inst18[14];
    _GEN_42 = Register_inst18[15];
    _GEN_43 = Register_inst18[16];
    _GEN_44 = Register_inst18[17];
    _GEN_45 = Register_inst18[18];
    _GEN_46 = Register_inst18[19];
    _GEN_47 = Register_inst18[20];
    _GEN_48 = Register_inst18[21];
    _GEN_49 = Register_inst18[22];
    _GEN_50 = Register_inst18[23];
    _GEN_51 = Register_inst18[24];
    _GEN_52 = Register_inst18[25];
    _GEN_53 = Register_inst18[26];
    _GEN_54 = Register_inst18[27];
    _GEN_55 = Register_inst18[28];
    _GEN_56 = Register_inst18[29];
    _GEN_57 = Register_inst18[30];
    _GEN_58 = Register_inst18[31];
    _GEN_59 = Register_inst10;
    _GEN_60 = Register_inst12;
    _GEN_61 = Register_inst11;
    _GEN_62 = Register_inst13;
    _GEN_63 = _GEN_387[0];
    _GEN_64 = _GEN_387[1];
    _GEN_65 = _GEN_387[2];
    _GEN_66 = _GEN_387[3];
    _GEN_67 = _GEN_387[4];
    _GEN_68 = _GEN_387[5];
    _GEN_69 = _GEN_387[6];
    _GEN_70 = _GEN_387[7];
    _GEN_71 = _GEN_387[8];
    _GEN_72 = _GEN_387[9];
    _GEN_73 = _GEN_387[10];
    _GEN_74 = _GEN_387[11];
    _GEN_75 = _GEN_387[12];
    _GEN_76 = _GEN_387[13];
    _GEN_77 = _GEN_387[14];
    _GEN_78 = _GEN_387[15];
    _GEN_79 = _GEN_387[16];
    _GEN_80 = _GEN_387[17];
    _GEN_81 = _GEN_387[18];
    _GEN_82 = _GEN_387[19];
    _GEN_83 = _GEN_387[20];
    _GEN_84 = _GEN_387[21];
    _GEN_85 = _GEN_387[22];
    _GEN_86 = _GEN_387[23];
    _GEN_87 = _GEN_387[24];
    _GEN_88 = _GEN_387[25];
    _GEN_89 = _GEN_387[26];
    _GEN_90 = _GEN_387[27];
    _GEN_91 = _GEN_387[28];
    _GEN_92 = _GEN_387[29];
    _GEN_93 = _GEN_387[30];
    _GEN_94 = _GEN_387[31];
    _GEN_95 = _GEN_14[0];
    _GEN_96 = _GEN_14[1];
    _GEN_97 = _GEN_14[2];
    _GEN_98 = _GEN_14[3];
    _GEN_99 = _GEN_14[4];
    _GEN_100 = _GEN_14[5];
    _GEN_101 = _GEN_14[6];
    _GEN_102 = _GEN_14[7];
    _GEN_103 = _GEN_14[8];
    _GEN_104 = _GEN_14[9];
    _GEN_105 = _GEN_14[10];
    _GEN_106 = _GEN_14[11];
    _GEN_107 = _GEN_14[12];
    _GEN_108 = _GEN_14[13];
    _GEN_109 = _GEN_14[14];
    _GEN_110 = _GEN_14[15];
    _GEN_111 = _GEN_14[16];
    _GEN_112 = _GEN_14[17];
    _GEN_113 = _GEN_14[18];
    _GEN_114 = _GEN_14[19];
    _GEN_115 = _GEN_14[20];
    _GEN_116 = _GEN_14[21];
    _GEN_117 = _GEN_14[22];
    _GEN_118 = _GEN_14[23];
    _GEN_119 = _GEN_14[24];
    _GEN_120 = _GEN_14[25];
    _GEN_121 = _GEN_14[26];
    _GEN_122 = _GEN_14[27];
    _GEN_123 = _GEN_14[28];
    _GEN_124 = _GEN_14[29];
    _GEN_125 = _GEN_14[30];
    _GEN_126 = _GEN_14[31];
    _GEN_127 = Register_inst14[0];
    _GEN_128 = Register_inst14[1];
    _GEN_129 = Register_inst14[2];
    _GEN_130 = Register_inst14[3];
    _GEN_131 = Register_inst14[4];
    _GEN_132 = Register_inst14[5];
    _GEN_133 = Register_inst14[6];
    _GEN_134 = Register_inst14[7];
    _GEN_135 = Register_inst14[8];
    _GEN_136 = Register_inst14[9];
    _GEN_137 = Register_inst14[10];
    _GEN_138 = Register_inst14[11];
    _GEN_139 = Register_inst14[12];
    _GEN_140 = Register_inst14[13];
    _GEN_141 = Register_inst14[14];
    _GEN_142 = Register_inst14[15];
    _GEN_143 = Register_inst14[16];
    _GEN_144 = Register_inst14[17];
    _GEN_145 = Register_inst14[18];
    _GEN_146 = Register_inst14[19];
    _GEN_147 = Register_inst14[20];
    _GEN_148 = Register_inst14[21];
    _GEN_149 = Register_inst14[22];
    _GEN_150 = Register_inst14[23];
    _GEN_151 = Register_inst14[24];
    _GEN_152 = Register_inst14[25];
    _GEN_153 = Register_inst14[26];
    _GEN_154 = Register_inst14[27];
    _GEN_155 = Register_inst14[28];
    _GEN_156 = Register_inst14[29];
    _GEN_157 = Register_inst14[30];
    _GEN_158 = Register_inst14[31];
    _GEN_159 = Register_inst15[0];
    _GEN_160 = Register_inst15[1];
    _GEN_161 = Register_inst15[2];
    _GEN_162 = Register_inst15[3];
    _GEN_163 = Register_inst15[4];
    _GEN_164 = Register_inst15[5];
    _GEN_165 = Register_inst15[6];
    _GEN_166 = Register_inst15[7];
    _GEN_167 = Register_inst15[8];
    _GEN_168 = Register_inst15[9];
    _GEN_169 = Register_inst15[10];
    _GEN_170 = Register_inst15[11];
    _GEN_171 = Register_inst15[12];
    _GEN_172 = Register_inst15[13];
    _GEN_173 = Register_inst15[14];
    _GEN_174 = Register_inst15[15];
    _GEN_175 = Register_inst15[16];
    _GEN_176 = Register_inst15[17];
    _GEN_177 = Register_inst15[18];
    _GEN_178 = Register_inst15[19];
    _GEN_179 = Register_inst15[20];
    _GEN_180 = Register_inst15[21];
    _GEN_181 = Register_inst15[22];
    _GEN_182 = Register_inst15[23];
    _GEN_183 = Register_inst15[24];
    _GEN_184 = Register_inst15[25];
    _GEN_185 = Register_inst15[26];
    _GEN_186 = Register_inst15[27];
    _GEN_187 = Register_inst15[28];
    _GEN_188 = Register_inst15[29];
    _GEN_189 = Register_inst15[30];
    _GEN_190 = Register_inst15[31];
    _GEN_191 = Register_inst19[0];
    _GEN_192 = Register_inst19[1];
    _GEN_193 = Register_inst19[2];
    _GEN_194 = Register_inst19[3];
    _GEN_195 = Register_inst19[4];
    _GEN_196 = Register_inst19[5];
    _GEN_197 = Register_inst19[6];
    _GEN_198 = Register_inst19[7];
    _GEN_199 = Register_inst19[8];
    _GEN_200 = Register_inst19[9];
    _GEN_201 = Register_inst19[10];
    _GEN_202 = Register_inst19[11];
    _GEN_203 = Register_inst19[12];
    _GEN_204 = Register_inst19[13];
    _GEN_205 = Register_inst19[14];
    _GEN_206 = Register_inst19[15];
    _GEN_207 = Register_inst19[16];
    _GEN_208 = Register_inst19[17];
    _GEN_209 = Register_inst19[18];
    _GEN_210 = Register_inst19[19];
    _GEN_211 = Register_inst19[20];
    _GEN_212 = Register_inst19[21];
    _GEN_213 = Register_inst19[22];
    _GEN_214 = Register_inst19[23];
    _GEN_215 = Register_inst19[24];
    _GEN_216 = Register_inst19[25];
    _GEN_217 = Register_inst19[26];
    _GEN_218 = Register_inst19[27];
    _GEN_219 = Register_inst19[28];
    _GEN_220 = Register_inst19[29];
    _GEN_221 = Register_inst19[30];
    _GEN_222 = Register_inst19[31];
    _GEN_223 = _GEN_15[0];
    _GEN_224 = _GEN_15[1];
    _GEN_225 = _GEN_15[2];
    _GEN_226 = _GEN_15[3];
    _GEN_227 = _GEN_15[4];
    _GEN_228 = _GEN_15[5];
    _GEN_229 = _GEN_15[6];
    _GEN_230 = _GEN_15[7];
    _GEN_231 = _GEN_15[8];
    _GEN_232 = _GEN_15[9];
    _GEN_233 = _GEN_15[10];
    _GEN_234 = _GEN_15[11];
    _GEN_235 = _GEN_15[12];
    _GEN_236 = _GEN_15[13];
    _GEN_237 = _GEN_15[14];
    _GEN_238 = _GEN_15[15];
    _GEN_239 = _GEN_15[16];
    _GEN_240 = _GEN_15[17];
    _GEN_241 = _GEN_15[18];
    _GEN_242 = _GEN_15[19];
    _GEN_243 = _GEN_15[20];
    _GEN_244 = _GEN_15[21];
    _GEN_245 = _GEN_15[22];
    _GEN_246 = _GEN_15[23];
    _GEN_247 = _GEN_15[24];
    _GEN_248 = _GEN_15[25];
    _GEN_249 = _GEN_15[26];
    _GEN_250 = _GEN_15[27];
    _GEN_251 = _GEN_15[28];
    _GEN_252 = _GEN_15[29];
    _GEN_253 = _GEN_15[30];
    _GEN_254 = _GEN_15[31];
    _GEN_255 = _GEN_388[0];
    _GEN_256 = _GEN_388[1];
    _GEN_257 = _GEN_388[2];
    _GEN_258 = _GEN_388[3];
    _GEN_259 = _GEN_388[4];
    _GEN_260 = _GEN_388[5];
    _GEN_261 = _GEN_388[6];
    _GEN_262 = _GEN_388[7];
    _GEN_263 = _GEN_388[8];
    _GEN_264 = _GEN_388[9];
    _GEN_265 = _GEN_388[10];
    _GEN_266 = _GEN_388[11];
    _GEN_267 = _GEN_388[12];
    _GEN_268 = _GEN_388[13];
    _GEN_269 = _GEN_388[14];
    _GEN_270 = _GEN_388[15];
    _GEN_271 = _GEN_388[16];
    _GEN_272 = _GEN_388[17];
    _GEN_273 = _GEN_388[18];
    _GEN_274 = _GEN_388[19];
    _GEN_275 = _GEN_388[20];
    _GEN_276 = _GEN_388[21];
    _GEN_277 = _GEN_388[22];
    _GEN_278 = _GEN_388[23];
    _GEN_279 = _GEN_388[24];
    _GEN_280 = _GEN_388[25];
    _GEN_281 = _GEN_388[26];
    _GEN_282 = _GEN_388[27];
    _GEN_283 = _GEN_388[28];
    _GEN_284 = _GEN_388[29];
    _GEN_285 = _GEN_388[30];
    _GEN_286 = _GEN_388[31];
    _GEN_287 = _GEN_16[0];
    _GEN_288 = _GEN_16[1];
    _GEN_289 = _GEN_16[2];
    _GEN_290 = _GEN_16[3];
    _GEN_291 = _GEN_16[4];
    _GEN_292 = _GEN_16[5];
    _GEN_293 = _GEN_16[6];
    _GEN_294 = _GEN_16[7];
    _GEN_295 = _GEN_16[8];
    _GEN_296 = _GEN_16[9];
    _GEN_297 = _GEN_16[10];
    _GEN_298 = _GEN_16[11];
    _GEN_299 = _GEN_16[12];
    _GEN_300 = _GEN_16[13];
    _GEN_301 = _GEN_16[14];
    _GEN_302 = _GEN_16[15];
    _GEN_303 = _GEN_16[16];
    _GEN_304 = _GEN_16[17];
    _GEN_305 = _GEN_16[18];
    _GEN_306 = _GEN_16[19];
    _GEN_307 = _GEN_16[20];
    _GEN_308 = _GEN_16[21];
    _GEN_309 = _GEN_16[22];
    _GEN_310 = _GEN_16[23];
    _GEN_311 = _GEN_16[24];
    _GEN_312 = _GEN_16[25];
    _GEN_313 = _GEN_16[26];
    _GEN_314 = _GEN_16[27];
    _GEN_315 = _GEN_16[28];
    _GEN_316 = _GEN_16[29];
    _GEN_317 = _GEN_16[30];
    _GEN_318 = _GEN_16[31];
    _GEN_319 = _GEN_17[0];
    _GEN_320 = _GEN_17[1];
    _GEN_321 = _GEN_17[2];
    _GEN_322 = _GEN_17[3];
    _GEN_323 = _GEN_17[4];
    _GEN_324 = _GEN_17[5];
    _GEN_325 = _GEN_17[6];
    _GEN_326 = _GEN_17[7];
    _GEN_327 = _GEN_17[8];
    _GEN_328 = _GEN_17[9];
    _GEN_329 = _GEN_17[10];
    _GEN_330 = _GEN_17[11];
    _GEN_331 = _GEN_17[12];
    _GEN_332 = _GEN_17[13];
    _GEN_333 = _GEN_17[14];
    _GEN_334 = _GEN_17[15];
    _GEN_335 = _GEN_17[16];
    _GEN_336 = _GEN_17[17];
    _GEN_337 = _GEN_17[18];
    _GEN_338 = _GEN_17[19];
    _GEN_339 = _GEN_17[20];
    _GEN_340 = _GEN_17[21];
    _GEN_341 = _GEN_17[22];
    _GEN_342 = _GEN_17[23];
    _GEN_343 = _GEN_17[24];
    _GEN_344 = _GEN_17[25];
    _GEN_345 = _GEN_17[26];
    _GEN_346 = _GEN_17[27];
    _GEN_347 = _GEN_17[28];
    _GEN_348 = _GEN_17[29];
    _GEN_349 = _GEN_17[30];
    _GEN_350 = _GEN_17[31];
    _GEN_351 = _GEN_18[0];
    _GEN_352 = _GEN_18[1];
    _GEN_353 = _GEN_18[2];
    _GEN_354 = _GEN_18[3];
    _GEN_355 = _GEN_18[4];
    _GEN_356 = _GEN_18[5];
    _GEN_357 = _GEN_18[6];
    _GEN_358 = _GEN_18[7];
    _GEN_359 = _GEN_18[8];
    _GEN_360 = _GEN_18[9];
    _GEN_361 = _GEN_18[10];
    _GEN_362 = _GEN_18[11];
    _GEN_363 = _GEN_18[12];
    _GEN_364 = _GEN_18[13];
    _GEN_365 = _GEN_18[14];
    _GEN_366 = _GEN_18[15];
    _GEN_367 = _GEN_18[16];
    _GEN_368 = _GEN_18[17];
    _GEN_369 = _GEN_18[18];
    _GEN_370 = _GEN_18[19];
    _GEN_371 = _GEN_18[20];
    _GEN_372 = _GEN_18[21];
    _GEN_373 = _GEN_18[22];
    _GEN_374 = _GEN_18[23];
    _GEN_375 = _GEN_18[24];
    _GEN_376 = _GEN_18[25];
    _GEN_377 = _GEN_18[26];
    _GEN_378 = _GEN_18[27];
    _GEN_379 = _GEN_18[28];
    _GEN_380 = _GEN_18[29];
    _GEN_381 = _GEN_18[30];
    _GEN_382 = _GEN_18[31];
    if (not_stall) begin
      if (_GEN_13) begin
        _GEN_19 = {pc[31:2], 2'h0};
        _GEN_21 = 1'h1;
        _GEN_22 = 1'h1;
        _GEN_23 = 1'h0;
        _GEN_24 = Register_inst6[0];
        _GEN_25 = Register_inst6[1];
        _GEN_26 = Register_inst8;
        if (_GEN_0)
          _GEN_20 = 32'h0;
        else if (_GEN_4)
          _GEN_20 = 32'h4;
        else if (_GEN_7)
          _GEN_20 = 32'h6;
        else if (_GEN_11)
          _GEN_20 = {30'h0, Register_inst6} + 32'h8;
        else if (_GEN_12)
          _GEN_20 = 32'h3;
        else
          _GEN_20 = 32'h2;
        if (is_mbadaddr) begin
          _GEN_27 = addr[0];
          _GEN_28 = addr[1];
          _GEN_29 = addr[2];
          _GEN_30 = addr[3];
          _GEN_31 = addr[4];
          _GEN_32 = addr[5];
          _GEN_33 = addr[6];
          _GEN_34 = addr[7];
          _GEN_35 = addr[8];
          _GEN_36 = addr[9];
          _GEN_37 = addr[10];
          _GEN_38 = addr[11];
          _GEN_39 = addr[12];
          _GEN_40 = addr[13];
          _GEN_41 = addr[14];
          _GEN_42 = addr[15];
          _GEN_43 = addr[16];
          _GEN_44 = addr[17];
          _GEN_45 = addr[18];
          _GEN_46 = addr[19];
          _GEN_47 = addr[20];
          _GEN_48 = addr[21];
          _GEN_49 = addr[22];
          _GEN_50 = addr[23];
          _GEN_51 = addr[24];
          _GEN_52 = addr[25];
          _GEN_53 = addr[26];
          _GEN_54 = addr[27];
          _GEN_55 = addr[28];
          _GEN_56 = addr[29];
          _GEN_57 = addr[30];
          _GEN_58 = addr[31];
        end
      end
      else if (_GEN_10 & ~(inst[20]) & inst[28]) begin
        _GEN_21 = Register_inst7[0];
        _GEN_22 = Register_inst7[1];
        _GEN_23 = Register_inst9;
        _GEN_24 = 1'h0;
        _GEN_25 = 1'h0;
        _GEN_26 = 1'h1;
      end
      else if (_GEN_9) begin
        if (inst[31:20] == 12'h300) begin
          _GEN_24 = _GEN_386[4];
          _GEN_25 = _GEN_386[5];
          _GEN_26 = _GEN_386[3];
          _GEN_21 = _GEN_386[1];
          _GEN_22 = _GEN_386[2];
          _GEN_23 = _GEN_386[0];
        end
        else if (inst[31:20] == 12'h344) begin
          _GEN_59 = _GEN_386[7];
          _GEN_60 = _GEN_386[3];
        end
        else if (inst[31:20] == 12'h304) begin
          _GEN_61 = _GEN_386[7];
          _GEN_62 = _GEN_386[3];
        end
        else if (inst[31:20] == 12'h701) begin
          _GEN_63 = _GEN_386[0];
          _GEN_64 = _GEN_386[1];
          _GEN_65 = _GEN_386[2];
          _GEN_66 = _GEN_386[3];
          _GEN_67 = _GEN_386[4];
          _GEN_68 = _GEN_386[5];
          _GEN_69 = _GEN_386[6];
          _GEN_70 = _GEN_386[7];
          _GEN_71 = _GEN_386[8];
          _GEN_72 = _GEN_386[9];
          _GEN_73 = _GEN_386[10];
          _GEN_74 = _GEN_386[11];
          _GEN_75 = _GEN_386[12];
          _GEN_76 = _GEN_386[13];
          _GEN_77 = _GEN_386[14];
          _GEN_78 = _GEN_386[15];
          _GEN_79 = _GEN_386[16];
          _GEN_80 = _GEN_386[17];
          _GEN_81 = _GEN_386[18];
          _GEN_82 = _GEN_386[19];
          _GEN_83 = _GEN_386[20];
          _GEN_84 = _GEN_386[21];
          _GEN_85 = _GEN_386[22];
          _GEN_86 = _GEN_386[23];
          _GEN_87 = _GEN_386[24];
          _GEN_88 = _GEN_386[25];
          _GEN_89 = _GEN_386[26];
          _GEN_90 = _GEN_386[27];
          _GEN_91 = _GEN_386[28];
          _GEN_92 = _GEN_386[29];
          _GEN_93 = _GEN_386[30];
          _GEN_94 = _GEN_386[31];
        end
        else if (inst[31:20] == 12'h741) begin
          _GEN_95 = _GEN_386[0];
          _GEN_96 = _GEN_386[1];
          _GEN_97 = _GEN_386[2];
          _GEN_98 = _GEN_386[3];
          _GEN_99 = _GEN_386[4];
          _GEN_100 = _GEN_386[5];
          _GEN_101 = _GEN_386[6];
          _GEN_102 = _GEN_386[7];
          _GEN_103 = _GEN_386[8];
          _GEN_104 = _GEN_386[9];
          _GEN_105 = _GEN_386[10];
          _GEN_106 = _GEN_386[11];
          _GEN_107 = _GEN_386[12];
          _GEN_108 = _GEN_386[13];
          _GEN_109 = _GEN_386[14];
          _GEN_110 = _GEN_386[15];
          _GEN_111 = _GEN_386[16];
          _GEN_112 = _GEN_386[17];
          _GEN_113 = _GEN_386[18];
          _GEN_114 = _GEN_386[19];
          _GEN_115 = _GEN_386[20];
          _GEN_116 = _GEN_386[21];
          _GEN_117 = _GEN_386[22];
          _GEN_118 = _GEN_386[23];
          _GEN_119 = _GEN_386[24];
          _GEN_120 = _GEN_386[25];
          _GEN_121 = _GEN_386[26];
          _GEN_122 = _GEN_386[27];
          _GEN_123 = _GEN_386[28];
          _GEN_124 = _GEN_386[29];
          _GEN_125 = _GEN_386[30];
          _GEN_126 = _GEN_386[31];
        end
        else if (inst[31:20] == 12'h321) begin
          _GEN_127 = _GEN_386[0];
          _GEN_128 = _GEN_386[1];
          _GEN_129 = _GEN_386[2];
          _GEN_130 = _GEN_386[3];
          _GEN_131 = _GEN_386[4];
          _GEN_132 = _GEN_386[5];
          _GEN_133 = _GEN_386[6];
          _GEN_134 = _GEN_386[7];
          _GEN_135 = _GEN_386[8];
          _GEN_136 = _GEN_386[9];
          _GEN_137 = _GEN_386[10];
          _GEN_138 = _GEN_386[11];
          _GEN_139 = _GEN_386[12];
          _GEN_140 = _GEN_386[13];
          _GEN_141 = _GEN_386[14];
          _GEN_142 = _GEN_386[15];
          _GEN_143 = _GEN_386[16];
          _GEN_144 = _GEN_386[17];
          _GEN_145 = _GEN_386[18];
          _GEN_146 = _GEN_386[19];
          _GEN_147 = _GEN_386[20];
          _GEN_148 = _GEN_386[21];
          _GEN_149 = _GEN_386[22];
          _GEN_150 = _GEN_386[23];
          _GEN_151 = _GEN_386[24];
          _GEN_152 = _GEN_386[25];
          _GEN_153 = _GEN_386[26];
          _GEN_154 = _GEN_386[27];
          _GEN_155 = _GEN_386[28];
          _GEN_156 = _GEN_386[29];
          _GEN_157 = _GEN_386[30];
          _GEN_158 = _GEN_386[31];
        end
        else if (inst[31:20] == 12'h340) begin
          _GEN_159 = _GEN_386[0];
          _GEN_160 = _GEN_386[1];
          _GEN_161 = _GEN_386[2];
          _GEN_162 = _GEN_386[3];
          _GEN_163 = _GEN_386[4];
          _GEN_164 = _GEN_386[5];
          _GEN_165 = _GEN_386[6];
          _GEN_166 = _GEN_386[7];
          _GEN_167 = _GEN_386[8];
          _GEN_168 = _GEN_386[9];
          _GEN_169 = _GEN_386[10];
          _GEN_170 = _GEN_386[11];
          _GEN_171 = _GEN_386[12];
          _GEN_172 = _GEN_386[13];
          _GEN_173 = _GEN_386[14];
          _GEN_174 = _GEN_386[15];
          _GEN_175 = _GEN_386[16];
          _GEN_176 = _GEN_386[17];
          _GEN_177 = _GEN_386[18];
          _GEN_178 = _GEN_386[19];
          _GEN_179 = _GEN_386[20];
          _GEN_180 = _GEN_386[21];
          _GEN_181 = _GEN_386[22];
          _GEN_182 = _GEN_386[23];
          _GEN_183 = _GEN_386[24];
          _GEN_184 = _GEN_386[25];
          _GEN_185 = _GEN_386[26];
          _GEN_186 = _GEN_386[27];
          _GEN_187 = _GEN_386[28];
          _GEN_188 = _GEN_386[29];
          _GEN_189 = _GEN_386[30];
          _GEN_190 = _GEN_386[31];
        end
        else if (inst[31:20] == 12'h341)
          _GEN_19 = {_GEN_386[31:2], 2'h0};
        else if (inst[31:20] == 12'h342)
          _GEN_20 = _GEN_386 & 32'h8000000F;
        else if (inst[31:20] == 12'h343) begin
          _GEN_27 = _GEN_386[0];
          _GEN_28 = _GEN_386[1];
          _GEN_29 = _GEN_386[2];
          _GEN_30 = _GEN_386[3];
          _GEN_31 = _GEN_386[4];
          _GEN_32 = _GEN_386[5];
          _GEN_33 = _GEN_386[6];
          _GEN_34 = _GEN_386[7];
          _GEN_35 = _GEN_386[8];
          _GEN_36 = _GEN_386[9];
          _GEN_37 = _GEN_386[10];
          _GEN_38 = _GEN_386[11];
          _GEN_39 = _GEN_386[12];
          _GEN_40 = _GEN_386[13];
          _GEN_41 = _GEN_386[14];
          _GEN_42 = _GEN_386[15];
          _GEN_43 = _GEN_386[16];
          _GEN_44 = _GEN_386[17];
          _GEN_45 = _GEN_386[18];
          _GEN_46 = _GEN_386[19];
          _GEN_47 = _GEN_386[20];
          _GEN_48 = _GEN_386[21];
          _GEN_49 = _GEN_386[22];
          _GEN_50 = _GEN_386[23];
          _GEN_51 = _GEN_386[24];
          _GEN_52 = _GEN_386[25];
          _GEN_53 = _GEN_386[26];
          _GEN_54 = _GEN_386[27];
          _GEN_55 = _GEN_386[28];
          _GEN_56 = _GEN_386[29];
          _GEN_57 = _GEN_386[30];
          _GEN_58 = _GEN_386[31];
        end
        else if (inst[31:20] == 12'h780) begin
          _GEN_191 = _GEN_386[0];
          _GEN_192 = _GEN_386[1];
          _GEN_193 = _GEN_386[2];
          _GEN_194 = _GEN_386[3];
          _GEN_195 = _GEN_386[4];
          _GEN_196 = _GEN_386[5];
          _GEN_197 = _GEN_386[6];
          _GEN_198 = _GEN_386[7];
          _GEN_199 = _GEN_386[8];
          _GEN_200 = _GEN_386[9];
          _GEN_201 = _GEN_386[10];
          _GEN_202 = _GEN_386[11];
          _GEN_203 = _GEN_386[12];
          _GEN_204 = _GEN_386[13];
          _GEN_205 = _GEN_386[14];
          _GEN_206 = _GEN_386[15];
          _GEN_207 = _GEN_386[16];
          _GEN_208 = _GEN_386[17];
          _GEN_209 = _GEN_386[18];
          _GEN_210 = _GEN_386[19];
          _GEN_211 = _GEN_386[20];
          _GEN_212 = _GEN_386[21];
          _GEN_213 = _GEN_386[22];
          _GEN_214 = _GEN_386[23];
          _GEN_215 = _GEN_386[24];
          _GEN_216 = _GEN_386[25];
          _GEN_217 = _GEN_386[26];
          _GEN_218 = _GEN_386[27];
          _GEN_219 = _GEN_386[28];
          _GEN_220 = _GEN_386[29];
          _GEN_221 = _GEN_386[30];
          _GEN_222 = _GEN_386[31];
        end
        else if (inst[31:20] == 12'h781) begin
          _GEN_223 = _GEN_386[0];
          _GEN_224 = _GEN_386[1];
          _GEN_225 = _GEN_386[2];
          _GEN_226 = _GEN_386[3];
          _GEN_227 = _GEN_386[4];
          _GEN_228 = _GEN_386[5];
          _GEN_229 = _GEN_386[6];
          _GEN_230 = _GEN_386[7];
          _GEN_231 = _GEN_386[8];
          _GEN_232 = _GEN_386[9];
          _GEN_233 = _GEN_386[10];
          _GEN_234 = _GEN_386[11];
          _GEN_235 = _GEN_386[12];
          _GEN_236 = _GEN_386[13];
          _GEN_237 = _GEN_386[14];
          _GEN_238 = _GEN_386[15];
          _GEN_239 = _GEN_386[16];
          _GEN_240 = _GEN_386[17];
          _GEN_241 = _GEN_386[18];
          _GEN_242 = _GEN_386[19];
          _GEN_243 = _GEN_386[20];
          _GEN_244 = _GEN_386[21];
          _GEN_245 = _GEN_386[22];
          _GEN_246 = _GEN_386[23];
          _GEN_247 = _GEN_386[24];
          _GEN_248 = _GEN_386[25];
          _GEN_249 = _GEN_386[26];
          _GEN_250 = _GEN_386[27];
          _GEN_251 = _GEN_386[28];
          _GEN_252 = _GEN_386[29];
          _GEN_253 = _GEN_386[30];
          _GEN_254 = _GEN_386[31];
        end
        else if (inst[31:20] == 12'h900) begin
          _GEN_255 = _GEN_386[0];
          _GEN_256 = _GEN_386[1];
          _GEN_257 = _GEN_386[2];
          _GEN_258 = _GEN_386[3];
          _GEN_259 = _GEN_386[4];
          _GEN_260 = _GEN_386[5];
          _GEN_261 = _GEN_386[6];
          _GEN_262 = _GEN_386[7];
          _GEN_263 = _GEN_386[8];
          _GEN_264 = _GEN_386[9];
          _GEN_265 = _GEN_386[10];
          _GEN_266 = _GEN_386[11];
          _GEN_267 = _GEN_386[12];
          _GEN_268 = _GEN_386[13];
          _GEN_269 = _GEN_386[14];
          _GEN_270 = _GEN_386[15];
          _GEN_271 = _GEN_386[16];
          _GEN_272 = _GEN_386[17];
          _GEN_273 = _GEN_386[18];
          _GEN_274 = _GEN_386[19];
          _GEN_275 = _GEN_386[20];
          _GEN_276 = _GEN_386[21];
          _GEN_277 = _GEN_386[22];
          _GEN_278 = _GEN_386[23];
          _GEN_279 = _GEN_386[24];
          _GEN_280 = _GEN_386[25];
          _GEN_281 = _GEN_386[26];
          _GEN_282 = _GEN_386[27];
          _GEN_283 = _GEN_386[28];
          _GEN_284 = _GEN_386[29];
          _GEN_285 = _GEN_386[30];
          _GEN_286 = _GEN_386[31];
        end
        else if (inst[31:20] == 12'h901) begin
          _GEN_63 = _GEN_386[0];
          _GEN_64 = _GEN_386[1];
          _GEN_65 = _GEN_386[2];
          _GEN_66 = _GEN_386[3];
          _GEN_67 = _GEN_386[4];
          _GEN_68 = _GEN_386[5];
          _GEN_69 = _GEN_386[6];
          _GEN_70 = _GEN_386[7];
          _GEN_71 = _GEN_386[8];
          _GEN_72 = _GEN_386[9];
          _GEN_73 = _GEN_386[10];
          _GEN_74 = _GEN_386[11];
          _GEN_75 = _GEN_386[12];
          _GEN_76 = _GEN_386[13];
          _GEN_77 = _GEN_386[14];
          _GEN_78 = _GEN_386[15];
          _GEN_79 = _GEN_386[16];
          _GEN_80 = _GEN_386[17];
          _GEN_81 = _GEN_386[18];
          _GEN_82 = _GEN_386[19];
          _GEN_83 = _GEN_386[20];
          _GEN_84 = _GEN_386[21];
          _GEN_85 = _GEN_386[22];
          _GEN_86 = _GEN_386[23];
          _GEN_87 = _GEN_386[24];
          _GEN_88 = _GEN_386[25];
          _GEN_89 = _GEN_386[26];
          _GEN_90 = _GEN_386[27];
          _GEN_91 = _GEN_386[28];
          _GEN_92 = _GEN_386[29];
          _GEN_93 = _GEN_386[30];
          _GEN_94 = _GEN_386[31];
        end
        else if (inst[31:20] == 12'h902) begin
          _GEN_287 = _GEN_386[0];
          _GEN_288 = _GEN_386[1];
          _GEN_289 = _GEN_386[2];
          _GEN_290 = _GEN_386[3];
          _GEN_291 = _GEN_386[4];
          _GEN_292 = _GEN_386[5];
          _GEN_293 = _GEN_386[6];
          _GEN_294 = _GEN_386[7];
          _GEN_295 = _GEN_386[8];
          _GEN_296 = _GEN_386[9];
          _GEN_297 = _GEN_386[10];
          _GEN_298 = _GEN_386[11];
          _GEN_299 = _GEN_386[12];
          _GEN_300 = _GEN_386[13];
          _GEN_301 = _GEN_386[14];
          _GEN_302 = _GEN_386[15];
          _GEN_303 = _GEN_386[16];
          _GEN_304 = _GEN_386[17];
          _GEN_305 = _GEN_386[18];
          _GEN_306 = _GEN_386[19];
          _GEN_307 = _GEN_386[20];
          _GEN_308 = _GEN_386[21];
          _GEN_309 = _GEN_386[22];
          _GEN_310 = _GEN_386[23];
          _GEN_311 = _GEN_386[24];
          _GEN_312 = _GEN_386[25];
          _GEN_313 = _GEN_386[26];
          _GEN_314 = _GEN_386[27];
          _GEN_315 = _GEN_386[28];
          _GEN_316 = _GEN_386[29];
          _GEN_317 = _GEN_386[30];
          _GEN_318 = _GEN_386[31];
        end
        else if (inst[31:20] == 12'h980) begin
          _GEN_319 = _GEN_386[0];
          _GEN_320 = _GEN_386[1];
          _GEN_321 = _GEN_386[2];
          _GEN_322 = _GEN_386[3];
          _GEN_323 = _GEN_386[4];
          _GEN_324 = _GEN_386[5];
          _GEN_325 = _GEN_386[6];
          _GEN_326 = _GEN_386[7];
          _GEN_327 = _GEN_386[8];
          _GEN_328 = _GEN_386[9];
          _GEN_329 = _GEN_386[10];
          _GEN_330 = _GEN_386[11];
          _GEN_331 = _GEN_386[12];
          _GEN_332 = _GEN_386[13];
          _GEN_333 = _GEN_386[14];
          _GEN_334 = _GEN_386[15];
          _GEN_335 = _GEN_386[16];
          _GEN_336 = _GEN_386[17];
          _GEN_337 = _GEN_386[18];
          _GEN_338 = _GEN_386[19];
          _GEN_339 = _GEN_386[20];
          _GEN_340 = _GEN_386[21];
          _GEN_341 = _GEN_386[22];
          _GEN_342 = _GEN_386[23];
          _GEN_343 = _GEN_386[24];
          _GEN_344 = _GEN_386[25];
          _GEN_345 = _GEN_386[26];
          _GEN_346 = _GEN_386[27];
          _GEN_347 = _GEN_386[28];
          _GEN_348 = _GEN_386[29];
          _GEN_349 = _GEN_386[30];
          _GEN_350 = _GEN_386[31];
        end
        else if (inst[31:20] == 12'h981) begin
          _GEN_95 = _GEN_386[0];
          _GEN_96 = _GEN_386[1];
          _GEN_97 = _GEN_386[2];
          _GEN_98 = _GEN_386[3];
          _GEN_99 = _GEN_386[4];
          _GEN_100 = _GEN_386[5];
          _GEN_101 = _GEN_386[6];
          _GEN_102 = _GEN_386[7];
          _GEN_103 = _GEN_386[8];
          _GEN_104 = _GEN_386[9];
          _GEN_105 = _GEN_386[10];
          _GEN_106 = _GEN_386[11];
          _GEN_107 = _GEN_386[12];
          _GEN_108 = _GEN_386[13];
          _GEN_109 = _GEN_386[14];
          _GEN_110 = _GEN_386[15];
          _GEN_111 = _GEN_386[16];
          _GEN_112 = _GEN_386[17];
          _GEN_113 = _GEN_386[18];
          _GEN_114 = _GEN_386[19];
          _GEN_115 = _GEN_386[20];
          _GEN_116 = _GEN_386[21];
          _GEN_117 = _GEN_386[22];
          _GEN_118 = _GEN_386[23];
          _GEN_119 = _GEN_386[24];
          _GEN_120 = _GEN_386[25];
          _GEN_121 = _GEN_386[26];
          _GEN_122 = _GEN_386[27];
          _GEN_123 = _GEN_386[28];
          _GEN_124 = _GEN_386[29];
          _GEN_125 = _GEN_386[30];
          _GEN_126 = _GEN_386[31];
        end
        else if (inst[31:20] == 12'h982) begin
          _GEN_351 = _GEN_386[0];
          _GEN_352 = _GEN_386[1];
          _GEN_353 = _GEN_386[2];
          _GEN_354 = _GEN_386[3];
          _GEN_355 = _GEN_386[4];
          _GEN_356 = _GEN_386[5];
          _GEN_357 = _GEN_386[6];
          _GEN_358 = _GEN_386[7];
          _GEN_359 = _GEN_386[8];
          _GEN_360 = _GEN_386[9];
          _GEN_361 = _GEN_386[10];
          _GEN_362 = _GEN_386[11];
          _GEN_363 = _GEN_386[12];
          _GEN_364 = _GEN_386[13];
          _GEN_365 = _GEN_386[14];
          _GEN_366 = _GEN_386[15];
          _GEN_367 = _GEN_386[16];
          _GEN_368 = _GEN_386[17];
          _GEN_369 = _GEN_386[18];
          _GEN_370 = _GEN_386[19];
          _GEN_371 = _GEN_386[20];
          _GEN_372 = _GEN_386[21];
          _GEN_373 = _GEN_386[22];
          _GEN_374 = _GEN_386[23];
          _GEN_375 = _GEN_386[24];
          _GEN_376 = _GEN_386[25];
          _GEN_377 = _GEN_386[26];
          _GEN_378 = _GEN_386[27];
          _GEN_379 = _GEN_386[28];
          _GEN_380 = _GEN_386[29];
          _GEN_381 = _GEN_386[30];
          _GEN_382 = _GEN_386[31];
        end
      end
    end
  end // always_comb
  always_ff @(posedge CLK) begin
    if (RESET) begin
      Register_inst6 <= 2'h3;
      Register_inst16 <= 32'h0;
      Register_inst17 <= 32'h0;
      Register_inst8 <= 1'h0;
      Register_inst7 <= 2'h3;
      Register_inst9 <= 1'h0;
      Register_inst18 <= 32'h0;
      Register_inst10 <= 1'h0;
      Register_inst12 <= 1'h0;
      Register_inst11 <= 1'h0;
      Register_inst13 <= 1'h0;
      Register_inst0 <= 32'h0;
      Register_inst1 <= 32'h0;
      Register_inst14 <= 32'h0;
      Register_inst15 <= 32'h0;
      Register_inst19 <= 32'h0;
      Register_inst20 <= 32'h0;
      Register_inst4 <= 32'h0;
      Register_inst3 <= 32'h0;
      Register_inst5 <= 32'h0;
      Register_inst2 <= 32'h0;
    end
    else begin
      Register_inst6 <= {_GEN_22, _GEN_21};
      Register_inst16 <= _GEN_19;
      Register_inst17 <= _GEN_20;
      Register_inst8 <= _GEN_23;
      Register_inst7 <= {_GEN_25, _GEN_24};
      Register_inst9 <= _GEN_26;
      Register_inst18 <=
        {_GEN_58,
         _GEN_57,
         _GEN_56,
         _GEN_55,
         _GEN_54,
         _GEN_53,
         _GEN_52,
         _GEN_51,
         _GEN_50,
         _GEN_49,
         _GEN_48,
         _GEN_47,
         _GEN_46,
         _GEN_45,
         _GEN_44,
         _GEN_43,
         _GEN_42,
         _GEN_41,
         _GEN_40,
         _GEN_39,
         _GEN_38,
         _GEN_37,
         _GEN_36,
         _GEN_35,
         _GEN_34,
         _GEN_33,
         _GEN_32,
         _GEN_31,
         _GEN_30,
         _GEN_29,
         _GEN_28,
         _GEN_27};
      Register_inst10 <= _GEN_59;
      Register_inst12 <= _GEN_60;
      Register_inst11 <= _GEN_61;
      Register_inst13 <= _GEN_62;
      Register_inst0 <=
        {_GEN_94,
         _GEN_93,
         _GEN_92,
         _GEN_91,
         _GEN_90,
         _GEN_89,
         _GEN_88,
         _GEN_87,
         _GEN_86,
         _GEN_85,
         _GEN_84,
         _GEN_83,
         _GEN_82,
         _GEN_81,
         _GEN_80,
         _GEN_79,
         _GEN_78,
         _GEN_77,
         _GEN_76,
         _GEN_75,
         _GEN_74,
         _GEN_73,
         _GEN_72,
         _GEN_71,
         _GEN_70,
         _GEN_69,
         _GEN_68,
         _GEN_67,
         _GEN_66,
         _GEN_65,
         _GEN_64,
         _GEN_63};
      Register_inst1 <=
        {_GEN_126,
         _GEN_125,
         _GEN_124,
         _GEN_123,
         _GEN_122,
         _GEN_121,
         _GEN_120,
         _GEN_119,
         _GEN_118,
         _GEN_117,
         _GEN_116,
         _GEN_115,
         _GEN_114,
         _GEN_113,
         _GEN_112,
         _GEN_111,
         _GEN_110,
         _GEN_109,
         _GEN_108,
         _GEN_107,
         _GEN_106,
         _GEN_105,
         _GEN_104,
         _GEN_103,
         _GEN_102,
         _GEN_101,
         _GEN_100,
         _GEN_99,
         _GEN_98,
         _GEN_97,
         _GEN_96,
         _GEN_95};
      Register_inst14 <=
        {_GEN_158,
         _GEN_157,
         _GEN_156,
         _GEN_155,
         _GEN_154,
         _GEN_153,
         _GEN_152,
         _GEN_151,
         _GEN_150,
         _GEN_149,
         _GEN_148,
         _GEN_147,
         _GEN_146,
         _GEN_145,
         _GEN_144,
         _GEN_143,
         _GEN_142,
         _GEN_141,
         _GEN_140,
         _GEN_139,
         _GEN_138,
         _GEN_137,
         _GEN_136,
         _GEN_135,
         _GEN_134,
         _GEN_133,
         _GEN_132,
         _GEN_131,
         _GEN_130,
         _GEN_129,
         _GEN_128,
         _GEN_127};
      Register_inst15 <=
        {_GEN_190,
         _GEN_189,
         _GEN_188,
         _GEN_187,
         _GEN_186,
         _GEN_185,
         _GEN_184,
         _GEN_183,
         _GEN_182,
         _GEN_181,
         _GEN_180,
         _GEN_179,
         _GEN_178,
         _GEN_177,
         _GEN_176,
         _GEN_175,
         _GEN_174,
         _GEN_173,
         _GEN_172,
         _GEN_171,
         _GEN_170,
         _GEN_169,
         _GEN_168,
         _GEN_167,
         _GEN_166,
         _GEN_165,
         _GEN_164,
         _GEN_163,
         _GEN_162,
         _GEN_161,
         _GEN_160,
         _GEN_159};
      Register_inst19 <=
        {_GEN_222,
         _GEN_221,
         _GEN_220,
         _GEN_219,
         _GEN_218,
         _GEN_217,
         _GEN_216,
         _GEN_215,
         _GEN_214,
         _GEN_213,
         _GEN_212,
         _GEN_211,
         _GEN_210,
         _GEN_209,
         _GEN_208,
         _GEN_207,
         _GEN_206,
         _GEN_205,
         _GEN_204,
         _GEN_203,
         _GEN_202,
         _GEN_201,
         _GEN_200,
         _GEN_199,
         _GEN_198,
         _GEN_197,
         _GEN_196,
         _GEN_195,
         _GEN_194,
         _GEN_193,
         _GEN_192,
         _GEN_191};
      Register_inst20 <=
        {_GEN_254,
         _GEN_253,
         _GEN_252,
         _GEN_251,
         _GEN_250,
         _GEN_249,
         _GEN_248,
         _GEN_247,
         _GEN_246,
         _GEN_245,
         _GEN_244,
         _GEN_243,
         _GEN_242,
         _GEN_241,
         _GEN_240,
         _GEN_239,
         _GEN_238,
         _GEN_237,
         _GEN_236,
         _GEN_235,
         _GEN_234,
         _GEN_233,
         _GEN_232,
         _GEN_231,
         _GEN_230,
         _GEN_229,
         _GEN_228,
         _GEN_227,
         _GEN_226,
         _GEN_225,
         _GEN_224,
         _GEN_223};
      Register_inst4 <=
        {_GEN_318,
         _GEN_317,
         _GEN_316,
         _GEN_315,
         _GEN_314,
         _GEN_313,
         _GEN_312,
         _GEN_311,
         _GEN_310,
         _GEN_309,
         _GEN_308,
         _GEN_307,
         _GEN_306,
         _GEN_305,
         _GEN_304,
         _GEN_303,
         _GEN_302,
         _GEN_301,
         _GEN_300,
         _GEN_299,
         _GEN_298,
         _GEN_297,
         _GEN_296,
         _GEN_295,
         _GEN_294,
         _GEN_293,
         _GEN_292,
         _GEN_291,
         _GEN_290,
         _GEN_289,
         _GEN_288,
         _GEN_287};
      Register_inst3 <=
        {_GEN_350,
         _GEN_349,
         _GEN_348,
         _GEN_347,
         _GEN_346,
         _GEN_345,
         _GEN_344,
         _GEN_343,
         _GEN_342,
         _GEN_341,
         _GEN_340,
         _GEN_339,
         _GEN_338,
         _GEN_337,
         _GEN_336,
         _GEN_335,
         _GEN_334,
         _GEN_333,
         _GEN_332,
         _GEN_331,
         _GEN_330,
         _GEN_329,
         _GEN_328,
         _GEN_327,
         _GEN_326,
         _GEN_325,
         _GEN_324,
         _GEN_323,
         _GEN_322,
         _GEN_321,
         _GEN_320,
         _GEN_319};
      Register_inst5 <=
        {_GEN_382,
         _GEN_381,
         _GEN_380,
         _GEN_379,
         _GEN_378,
         _GEN_377,
         _GEN_376,
         _GEN_375,
         _GEN_374,
         _GEN_373,
         _GEN_372,
         _GEN_371,
         _GEN_370,
         _GEN_369,
         _GEN_368,
         _GEN_367,
         _GEN_366,
         _GEN_365,
         _GEN_364,
         _GEN_363,
         _GEN_362,
         _GEN_361,
         _GEN_360,
         _GEN_359,
         _GEN_358,
         _GEN_357,
         _GEN_356,
         _GEN_355,
         _GEN_354,
         _GEN_353,
         _GEN_352,
         _GEN_351};
      Register_inst2 <=
        {_GEN_286,
         _GEN_285,
         _GEN_284,
         _GEN_283,
         _GEN_282,
         _GEN_281,
         _GEN_280,
         _GEN_279,
         _GEN_278,
         _GEN_277,
         _GEN_276,
         _GEN_275,
         _GEN_274,
         _GEN_273,
         _GEN_272,
         _GEN_271,
         _GEN_270,
         _GEN_269,
         _GEN_268,
         _GEN_267,
         _GEN_266,
         _GEN_265,
         _GEN_264,
         _GEN_263,
         _GEN_262,
         _GEN_261,
         _GEN_260,
         _GEN_259,
         _GEN_258,
         _GEN_257,
         _GEN_256,
         _GEN_255};
    end
  end // always_ff @(posedge)
  initial begin
    Register_inst6 = 2'h3;
    Register_inst16 = 32'h0;
    Register_inst17 = 32'h0;
    Register_inst8 = 1'h0;
    Register_inst7 = 2'h3;
    Register_inst9 = 1'h0;
    Register_inst18 = 32'h0;
    Register_inst10 = 1'h0;
    Register_inst12 = 1'h0;
    Register_inst11 = 1'h0;
    Register_inst13 = 1'h0;
    Register_inst0 = 32'h0;
    Register_inst1 = 32'h0;
    Register_inst14 = 32'h0;
    Register_inst15 = 32'h0;
    Register_inst19 = 32'h0;
    Register_inst20 = 32'h0;
    Register_inst4 = 32'h0;
    Register_inst3 = 32'h0;
    Register_inst5 = 32'h0;
    Register_inst2 = 32'h0;
  end // initial
  wire [1:0][31:0] _GEN_389 = {{Register_inst2}, {32'h0}};
  wire [1:0][31:0] _GEN_390 = {{Register_inst0}, {_GEN_389[inst[31:20] == 12'hC00]}};
  wire [1:0][31:0] _GEN_391 = {{Register_inst4}, {_GEN_390[inst[31:20] == 12'hC01]}};
  wire [1:0][31:0] _GEN_392 = {{Register_inst3}, {_GEN_391[inst[31:20] == 12'hC02]}};
  wire [1:0][31:0] _GEN_393 = {{Register_inst1}, {_GEN_392[inst[31:20] == 12'hC80]}};
  wire [1:0][31:0] _GEN_394 = {{Register_inst5}, {_GEN_393[inst[31:20] == 12'hC81]}};
  wire [1:0][31:0] _GEN_395 = {{Register_inst2}, {_GEN_394[inst[31:20] == 12'hC82]}};
  wire [1:0][31:0] _GEN_396 = {{Register_inst0}, {_GEN_395[inst[31:20] == 12'h900]}};
  wire [1:0][31:0] _GEN_397 = {{Register_inst4}, {_GEN_396[inst[31:20] == 12'h901]}};
  wire [1:0][31:0] _GEN_398 = {{Register_inst3}, {_GEN_397[inst[31:20] == 12'h902]}};
  wire [1:0][31:0] _GEN_399 = {{Register_inst1}, {_GEN_398[inst[31:20] == 12'h980]}};
  wire [1:0][31:0] _GEN_400 = {{Register_inst5}, {_GEN_399[inst[31:20] == 12'h981]}};
  wire [1:0][31:0] _GEN_401 = {{32'h100100}, {_GEN_400[inst[31:20] == 12'h982]}};
  wire [1:0][31:0] _GEN_402 = {{32'h0}, {_GEN_401[inst[31:20] == 12'hF00]}};
  wire [1:0][31:0] _GEN_403 = {{32'h0}, {_GEN_402[inst[31:20] == 12'hF01]}};
  wire [1:0][31:0] _GEN_404 = {{32'h100}, {_GEN_403[inst[31:20] == 12'hF10]}};
  wire [1:0][31:0] _GEN_405 = {{32'h0}, {_GEN_404[inst[31:20] == 12'h301]}};
  wire [1:0][31:0] _GEN_406 =
    {{{24'h0, Register_inst11, 3'h0, Register_inst13, 3'h0}},
     {_GEN_405[inst[31:20] == 12'h302]}};
  wire [1:0][31:0] _GEN_407 = {{Register_inst14}, {_GEN_406[inst[31:20] == 12'h304]}};
  wire [1:0][31:0] _GEN_408 = {{Register_inst0}, {_GEN_407[inst[31:20] == 12'h321]}};
  wire [1:0][31:0] _GEN_409 = {{Register_inst1}, {_GEN_408[inst[31:20] == 12'h701]}};
  wire [1:0][31:0] _GEN_410 = {{Register_inst15}, {_GEN_409[inst[31:20] == 12'h741]}};
  wire [1:0][31:0] _GEN_411 = {{Register_inst16}, {_GEN_410[inst[31:20] == 12'h340]}};
  wire [1:0][31:0] _GEN_412 = {{Register_inst17}, {_GEN_411[inst[31:20] == 12'h341]}};
  wire [1:0][31:0] _GEN_413 = {{Register_inst18}, {_GEN_412[inst[31:20] == 12'h342]}};
  wire [1:0][31:0] _GEN_414 =
    {{{24'h0, Register_inst10, 3'h0, Register_inst12, 3'h0}},
     {_GEN_413[inst[31:20] == 12'h343]}};
  wire [1:0][31:0] _GEN_415 = {{Register_inst19}, {_GEN_414[inst[31:20] == 12'h344]}};
  wire [1:0][31:0] _GEN_416 = {{Register_inst20}, {_GEN_415[inst[31:20] == 12'h780]}};
  wire [1:0][31:0] _GEN_417 =
    {{{26'h0, Register_inst7, Register_inst9, Register_inst6, Register_inst8}},
     {_GEN_416[inst[31:20] == 12'h781]}};
  assign _GEN = _GEN_417[inst[31:20] == 12'h300];
  assign O = _GEN;
  assign expt = _GEN_13;
  assign evec = {24'h0, Register_inst6, 6'h0} + 32'h100;
  assign epc = Register_inst16;
  assign host_tohost = Register_inst19;
endmodule

module RegFile(
  input  [4:0]  raddr1,
                raddr2,
  input         wen,
  input  [4:0]  waddr,
  input  [31:0] wdata,
  input         CLK,
                RESET,
  output [31:0] rdata1,
                rdata2
);

  reg  [31:0][31:0] MultiportMemory_inst0;
  always_ff @(posedge CLK) begin
    if (wen & (|waddr))
      MultiportMemory_inst0[waddr] <= wdata;
  end // always_ff @(posedge)
  wire [1:0][31:0]  _GEN = {{MultiportMemory_inst0[raddr1]}, {32'h0}};
  wire [1:0][31:0]  _GEN_0 = {{MultiportMemory_inst0[raddr2]}, {32'h0}};
  assign rdata1 = _GEN[|raddr1];
  assign rdata2 = _GEN_0[|raddr2];
endmodule

module ALUArea(
  input  [31:0] A,
                B,
  input  [3:0]  op,
  output [31:0] O,
                sum_
);

  wire [1:0][31:0] _GEN = {{32'h0 - B}, {B}};
  wire [31:0]      _GEN_0 = A + _GEN[op[0]];
  reg              _GEN_1;
  reg              _GEN_2;
  reg              _GEN_3;
  reg              _GEN_4;
  reg              _GEN_5;
  reg              _GEN_6;
  reg              _GEN_7;
  reg              _GEN_8;
  reg              _GEN_9;
  reg              _GEN_10;
  reg              _GEN_11;
  reg              _GEN_12;
  reg              _GEN_13;
  reg              _GEN_14;
  reg              _GEN_15;
  reg              _GEN_16;
  reg              _GEN_17;
  reg              _GEN_18;
  reg              _GEN_19;
  reg              _GEN_20;
  reg              _GEN_21;
  reg              _GEN_22;
  reg              _GEN_23;
  reg              _GEN_24;
  reg              _GEN_25;
  reg              _GEN_26;
  reg              _GEN_27;
  reg              _GEN_28;
  reg              _GEN_29;
  reg              _GEN_30;
  reg              _GEN_31;
  reg              _GEN_32;
  wire [31:0]      _GEN_33 = A & B;
  wire [31:0]      _GEN_34 = A | B;
  wire [31:0]      _GEN_35 = A ^ B;
  wire [1:0]       _GEN_36 = {{B[31]}, {A[31]}};
  wire [1:0][31:0] _GEN_37 =
    {{A},
     {{A[0],
       A[1],
       A[2],
       A[3],
       A[4],
       A[5],
       A[6],
       A[7],
       A[8],
       A[9],
       A[10],
       A[11],
       A[12],
       A[13],
       A[14],
       A[15],
       A[16],
       A[17],
       A[18],
       A[19],
       A[20],
       A[21],
       A[22],
       A[23],
       A[24],
       A[25],
       A[26],
       A[27],
       A[28],
       A[29],
       A[30],
       A[31]}}};
  wire [31:0]      _GEN_38 = _GEN_37[op[3]];
  wire [32:0]      _GEN_39 = $signed($signed({op[0] & _GEN_38[31], _GEN_38}) >>> B);
  wire [1:0]       _GEN_40 = {{_GEN_0[31]}, {_GEN_36[op[1]]}};
  always_comb begin
    if (op == 4'h0 | op == 4'h1) begin
      _GEN_1 = _GEN_0[0];
      _GEN_2 = _GEN_0[1];
      _GEN_3 = _GEN_0[2];
      _GEN_4 = _GEN_0[3];
      _GEN_5 = _GEN_0[4];
      _GEN_6 = _GEN_0[5];
      _GEN_7 = _GEN_0[6];
      _GEN_8 = _GEN_0[7];
      _GEN_9 = _GEN_0[8];
      _GEN_10 = _GEN_0[9];
      _GEN_11 = _GEN_0[10];
      _GEN_12 = _GEN_0[11];
      _GEN_13 = _GEN_0[12];
      _GEN_14 = _GEN_0[13];
      _GEN_15 = _GEN_0[14];
      _GEN_16 = _GEN_0[15];
      _GEN_17 = _GEN_0[16];
      _GEN_18 = _GEN_0[17];
      _GEN_19 = _GEN_0[18];
      _GEN_20 = _GEN_0[19];
      _GEN_21 = _GEN_0[20];
      _GEN_22 = _GEN_0[21];
      _GEN_23 = _GEN_0[22];
      _GEN_24 = _GEN_0[23];
      _GEN_25 = _GEN_0[24];
      _GEN_26 = _GEN_0[25];
      _GEN_27 = _GEN_0[26];
      _GEN_28 = _GEN_0[27];
      _GEN_29 = _GEN_0[28];
      _GEN_30 = _GEN_0[29];
      _GEN_31 = _GEN_0[30];
      _GEN_32 = _GEN_0[31];
    end
    else if (op == 4'h5 | op == 4'h7) begin
      _GEN_1 = _GEN_40[A[31] ^ ~(B[31])];
      _GEN_2 = 1'h0;
      _GEN_3 = 1'h0;
      _GEN_4 = 1'h0;
      _GEN_5 = 1'h0;
      _GEN_6 = 1'h0;
      _GEN_7 = 1'h0;
      _GEN_8 = 1'h0;
      _GEN_9 = 1'h0;
      _GEN_10 = 1'h0;
      _GEN_11 = 1'h0;
      _GEN_12 = 1'h0;
      _GEN_13 = 1'h0;
      _GEN_14 = 1'h0;
      _GEN_15 = 1'h0;
      _GEN_16 = 1'h0;
      _GEN_17 = 1'h0;
      _GEN_18 = 1'h0;
      _GEN_19 = 1'h0;
      _GEN_20 = 1'h0;
      _GEN_21 = 1'h0;
      _GEN_22 = 1'h0;
      _GEN_23 = 1'h0;
      _GEN_24 = 1'h0;
      _GEN_25 = 1'h0;
      _GEN_26 = 1'h0;
      _GEN_27 = 1'h0;
      _GEN_28 = 1'h0;
      _GEN_29 = 1'h0;
      _GEN_30 = 1'h0;
      _GEN_31 = 1'h0;
      _GEN_32 = 1'h0;
    end
    else if (op == 4'h9 | op == 4'h8) begin
      _GEN_1 = _GEN_39[0];
      _GEN_2 = _GEN_39[1];
      _GEN_3 = _GEN_39[2];
      _GEN_4 = _GEN_39[3];
      _GEN_5 = _GEN_39[4];
      _GEN_6 = _GEN_39[5];
      _GEN_7 = _GEN_39[6];
      _GEN_8 = _GEN_39[7];
      _GEN_9 = _GEN_39[8];
      _GEN_10 = _GEN_39[9];
      _GEN_11 = _GEN_39[10];
      _GEN_12 = _GEN_39[11];
      _GEN_13 = _GEN_39[12];
      _GEN_14 = _GEN_39[13];
      _GEN_15 = _GEN_39[14];
      _GEN_16 = _GEN_39[15];
      _GEN_17 = _GEN_39[16];
      _GEN_18 = _GEN_39[17];
      _GEN_19 = _GEN_39[18];
      _GEN_20 = _GEN_39[19];
      _GEN_21 = _GEN_39[20];
      _GEN_22 = _GEN_39[21];
      _GEN_23 = _GEN_39[22];
      _GEN_24 = _GEN_39[23];
      _GEN_25 = _GEN_39[24];
      _GEN_26 = _GEN_39[25];
      _GEN_27 = _GEN_39[26];
      _GEN_28 = _GEN_39[27];
      _GEN_29 = _GEN_39[28];
      _GEN_30 = _GEN_39[29];
      _GEN_31 = _GEN_39[30];
      _GEN_32 = _GEN_39[31];
    end
    else if (op == 4'h6) begin
      _GEN_1 = _GEN_39[31];
      _GEN_2 = _GEN_39[30];
      _GEN_3 = _GEN_39[29];
      _GEN_4 = _GEN_39[28];
      _GEN_5 = _GEN_39[27];
      _GEN_6 = _GEN_39[26];
      _GEN_7 = _GEN_39[25];
      _GEN_8 = _GEN_39[24];
      _GEN_9 = _GEN_39[23];
      _GEN_10 = _GEN_39[22];
      _GEN_11 = _GEN_39[21];
      _GEN_12 = _GEN_39[20];
      _GEN_13 = _GEN_39[19];
      _GEN_14 = _GEN_39[18];
      _GEN_15 = _GEN_39[17];
      _GEN_16 = _GEN_39[16];
      _GEN_17 = _GEN_39[15];
      _GEN_18 = _GEN_39[14];
      _GEN_19 = _GEN_39[13];
      _GEN_20 = _GEN_39[12];
      _GEN_21 = _GEN_39[11];
      _GEN_22 = _GEN_39[10];
      _GEN_23 = _GEN_39[9];
      _GEN_24 = _GEN_39[8];
      _GEN_25 = _GEN_39[7];
      _GEN_26 = _GEN_39[6];
      _GEN_27 = _GEN_39[5];
      _GEN_28 = _GEN_39[4];
      _GEN_29 = _GEN_39[3];
      _GEN_30 = _GEN_39[2];
      _GEN_31 = _GEN_39[1];
      _GEN_32 = _GEN_39[0];
    end
    else if (op == 4'h2) begin
      _GEN_1 = _GEN_33[0];
      _GEN_2 = _GEN_33[1];
      _GEN_3 = _GEN_33[2];
      _GEN_4 = _GEN_33[3];
      _GEN_5 = _GEN_33[4];
      _GEN_6 = _GEN_33[5];
      _GEN_7 = _GEN_33[6];
      _GEN_8 = _GEN_33[7];
      _GEN_9 = _GEN_33[8];
      _GEN_10 = _GEN_33[9];
      _GEN_11 = _GEN_33[10];
      _GEN_12 = _GEN_33[11];
      _GEN_13 = _GEN_33[12];
      _GEN_14 = _GEN_33[13];
      _GEN_15 = _GEN_33[14];
      _GEN_16 = _GEN_33[15];
      _GEN_17 = _GEN_33[16];
      _GEN_18 = _GEN_33[17];
      _GEN_19 = _GEN_33[18];
      _GEN_20 = _GEN_33[19];
      _GEN_21 = _GEN_33[20];
      _GEN_22 = _GEN_33[21];
      _GEN_23 = _GEN_33[22];
      _GEN_24 = _GEN_33[23];
      _GEN_25 = _GEN_33[24];
      _GEN_26 = _GEN_33[25];
      _GEN_27 = _GEN_33[26];
      _GEN_28 = _GEN_33[27];
      _GEN_29 = _GEN_33[28];
      _GEN_30 = _GEN_33[29];
      _GEN_31 = _GEN_33[30];
      _GEN_32 = _GEN_33[31];
    end
    else if (op == 4'h3) begin
      _GEN_1 = _GEN_34[0];
      _GEN_2 = _GEN_34[1];
      _GEN_3 = _GEN_34[2];
      _GEN_4 = _GEN_34[3];
      _GEN_5 = _GEN_34[4];
      _GEN_6 = _GEN_34[5];
      _GEN_7 = _GEN_34[6];
      _GEN_8 = _GEN_34[7];
      _GEN_9 = _GEN_34[8];
      _GEN_10 = _GEN_34[9];
      _GEN_11 = _GEN_34[10];
      _GEN_12 = _GEN_34[11];
      _GEN_13 = _GEN_34[12];
      _GEN_14 = _GEN_34[13];
      _GEN_15 = _GEN_34[14];
      _GEN_16 = _GEN_34[15];
      _GEN_17 = _GEN_34[16];
      _GEN_18 = _GEN_34[17];
      _GEN_19 = _GEN_34[18];
      _GEN_20 = _GEN_34[19];
      _GEN_21 = _GEN_34[20];
      _GEN_22 = _GEN_34[21];
      _GEN_23 = _GEN_34[22];
      _GEN_24 = _GEN_34[23];
      _GEN_25 = _GEN_34[24];
      _GEN_26 = _GEN_34[25];
      _GEN_27 = _GEN_34[26];
      _GEN_28 = _GEN_34[27];
      _GEN_29 = _GEN_34[28];
      _GEN_30 = _GEN_34[29];
      _GEN_31 = _GEN_34[30];
      _GEN_32 = _GEN_34[31];
    end
    else if (op == 4'h4) begin
      _GEN_1 = _GEN_35[0];
      _GEN_2 = _GEN_35[1];
      _GEN_3 = _GEN_35[2];
      _GEN_4 = _GEN_35[3];
      _GEN_5 = _GEN_35[4];
      _GEN_6 = _GEN_35[5];
      _GEN_7 = _GEN_35[6];
      _GEN_8 = _GEN_35[7];
      _GEN_9 = _GEN_35[8];
      _GEN_10 = _GEN_35[9];
      _GEN_11 = _GEN_35[10];
      _GEN_12 = _GEN_35[11];
      _GEN_13 = _GEN_35[12];
      _GEN_14 = _GEN_35[13];
      _GEN_15 = _GEN_35[14];
      _GEN_16 = _GEN_35[15];
      _GEN_17 = _GEN_35[16];
      _GEN_18 = _GEN_35[17];
      _GEN_19 = _GEN_35[18];
      _GEN_20 = _GEN_35[19];
      _GEN_21 = _GEN_35[20];
      _GEN_22 = _GEN_35[21];
      _GEN_23 = _GEN_35[22];
      _GEN_24 = _GEN_35[23];
      _GEN_25 = _GEN_35[24];
      _GEN_26 = _GEN_35[25];
      _GEN_27 = _GEN_35[26];
      _GEN_28 = _GEN_35[27];
      _GEN_29 = _GEN_35[28];
      _GEN_30 = _GEN_35[29];
      _GEN_31 = _GEN_35[30];
      _GEN_32 = _GEN_35[31];
    end
    else if (op == 4'hA) begin
      _GEN_1 = A[0];
      _GEN_2 = A[1];
      _GEN_3 = A[2];
      _GEN_4 = A[3];
      _GEN_5 = A[4];
      _GEN_6 = A[5];
      _GEN_7 = A[6];
      _GEN_8 = A[7];
      _GEN_9 = A[8];
      _GEN_10 = A[9];
      _GEN_11 = A[10];
      _GEN_12 = A[11];
      _GEN_13 = A[12];
      _GEN_14 = A[13];
      _GEN_15 = A[14];
      _GEN_16 = A[15];
      _GEN_17 = A[16];
      _GEN_18 = A[17];
      _GEN_19 = A[18];
      _GEN_20 = A[19];
      _GEN_21 = A[20];
      _GEN_22 = A[21];
      _GEN_23 = A[22];
      _GEN_24 = A[23];
      _GEN_25 = A[24];
      _GEN_26 = A[25];
      _GEN_27 = A[26];
      _GEN_28 = A[27];
      _GEN_29 = A[28];
      _GEN_30 = A[29];
      _GEN_31 = A[30];
      _GEN_32 = A[31];
    end
    else begin
      _GEN_1 = B[0];
      _GEN_2 = B[1];
      _GEN_3 = B[2];
      _GEN_4 = B[3];
      _GEN_5 = B[4];
      _GEN_6 = B[5];
      _GEN_7 = B[6];
      _GEN_8 = B[7];
      _GEN_9 = B[8];
      _GEN_10 = B[9];
      _GEN_11 = B[10];
      _GEN_12 = B[11];
      _GEN_13 = B[12];
      _GEN_14 = B[13];
      _GEN_15 = B[14];
      _GEN_16 = B[15];
      _GEN_17 = B[16];
      _GEN_18 = B[17];
      _GEN_19 = B[18];
      _GEN_20 = B[19];
      _GEN_21 = B[20];
      _GEN_22 = B[21];
      _GEN_23 = B[22];
      _GEN_24 = B[23];
      _GEN_25 = B[24];
      _GEN_26 = B[25];
      _GEN_27 = B[26];
      _GEN_28 = B[27];
      _GEN_29 = B[28];
      _GEN_30 = B[29];
      _GEN_31 = B[30];
      _GEN_32 = B[31];
    end
  end // always_comb
  assign O =
    {_GEN_32,
     _GEN_31,
     _GEN_30,
     _GEN_29,
     _GEN_28,
     _GEN_27,
     _GEN_26,
     _GEN_25,
     _GEN_24,
     _GEN_23,
     _GEN_22,
     _GEN_21,
     _GEN_20,
     _GEN_19,
     _GEN_18,
     _GEN_17,
     _GEN_16,
     _GEN_15,
     _GEN_14,
     _GEN_13,
     _GEN_12,
     _GEN_11,
     _GEN_10,
     _GEN_9,
     _GEN_8,
     _GEN_7,
     _GEN_6,
     _GEN_5,
     _GEN_4,
     _GEN_3,
     _GEN_2,
     _GEN_1};
  assign sum_ = _GEN_0;
endmodule

module ImmGenWire(
  input  [31:0] inst,
  input  [2:0]  sel,
  output [31:0] O
);

  wire [1:0][31:0] _GEN =
    {{{{21{inst[31]}}, inst[30:20]}}, {{{21{inst[31]}}, inst[30:20]} & 32'hFFFFFFFE}};
  wire [1:0][31:0] _GEN_0 =
    {{{{21{inst[31]}}, inst[30:25], inst[11:7]}}, {_GEN[sel == 3'h1]}};
  wire [1:0][31:0] _GEN_1 =
    {{{{20{inst[31]}}, inst[7], inst[30:25], inst[11:8], 1'h0}}, {_GEN_0[sel == 3'h2]}};
  wire [1:0][31:0] _GEN_2 = {{{inst[31:12], 12'h0}}, {_GEN_1[sel == 3'h5]}};
  wire [1:0][31:0] _GEN_3 =
    {{{{12{inst[31]}}, inst[19:12], inst[20], inst[30:21], 1'h0}}, {_GEN_2[sel == 3'h3]}};
  wire [1:0][31:0] _GEN_4 = {{{27'h0, inst[19:15]}}, {_GEN_3[sel == 3'h4]}};
  assign O = _GEN_4[sel == 3'h6];
endmodule

module BrCondArea(
  input  [31:0] rs1,
                rs2,
  input  [2:0]  br_type,
  output        taken
);

  wire [31:0] _GEN = rs1 - rs2;
  wire        _GEN_0 = rs1[31] ^ ~(rs2[31]);
  wire [1:0]  _GEN_1 = {{_GEN[31]}, {rs1[31]}};
  wire [1:0]  _GEN_2 = {{_GEN[31]}, {rs2[31]}};
  assign taken =
    br_type == 3'h3 & ~(|_GEN) | br_type == 3'h6 & (|_GEN) | br_type == 3'h2
    & _GEN_1[_GEN_0] | br_type == 3'h5 & ~_GEN_1[_GEN_0] | br_type == 3'h1
    & _GEN_2[_GEN_0] | br_type == 3'h4 & ~_GEN_2[_GEN_0];
endmodule

module Datapath(
  input  struct packed {logic valid; logic [31:0] data; }                                                             host_fromhost,
  input  struct packed {logic valid; struct packed {logic [31:0] data; } data; }                                      icache_resp,
                                                                                                                      dcache_resp,
  input  [1:0]                                                                                                        ctrl_pc_sel,
  input                                                                                                               ctrl_inst_kill,
                                                                                                                      ctrl_A_sel,
                                                                                                                      ctrl_B_sel,
  input  [2:0]                                                                                                        ctrl_imm_sel,
  input  [3:0]                                                                                                        ctrl_alu_op,
  input  [2:0]                                                                                                        ctrl_br_type,
  input  [1:0]                                                                                                        ctrl_st_type,
  input  [2:0]                                                                                                        ctrl_ld_type,
  input  [1:0]                                                                                                        ctrl_wb_sel,
  input                                                                                                               ctrl_wb_en,
  input  [2:0]                                                                                                        ctrl_csr_cmd,
  input                                                                                                               ctrl_illegal,
                                                                                                                      CLK,
                                                                                                                      RESET,
  output [31:0]                                                                                                       host_tohost,
  output                                                                                                              icache_abort,
  output struct packed {logic valid; struct packed {logic [31:0] addr; logic [31:0] data; logic [3:0] mask; } data; } icache_req,
  output                                                                                                              dcache_abort,
  output struct packed {logic valid; struct packed {logic [31:0] addr; logic [31:0] data; logic [3:0] mask; } data; } dcache_req,
  output [31:0]                                                                                                       ctrl_inst
);

  reg  [2:0]
    Register_inst10;
  reg  [31:0]
    Register_inst1;
  reg  [31:0]
    Register_inst14;
  reg  [31:0]
    Register_inst0;
  wire [31:0]
    _CSRGen_inst0_O;
  wire
    _CSRGen_inst0_expt;
  wire [31:0]
    _CSRGen_inst0_evec;
  wire [31:0]
    _CSRGen_inst0_epc;
  wire [31:0]
    _ALUArea_inst0_O;
  wire [31:0]
    _ALUArea_inst0_sum_;
  wire [31:0]
    _ImmGenWire_inst0_O;
  wire [31:0]
    _RegFile_inst0_rdata1;
  wire [31:0]
    _RegFile_inst0_rdata2;
  wire
    _BrCondArea_inst0_taken;
  wire [1:0][3:0]                                                               _GEN =
    '{4'hF, 4'h0};
  wire                                                                          _GEN_0 =
    ~icache_resp.valid | ~dcache_resp.valid;
  reg  [1:0]
    Register_inst6;
  reg  [2:0]
    Register_inst7;
  reg
    Register_inst9;
  reg
    Register_inst11;
  reg
    Register_inst12;
  reg  [31:0]
    Register_inst3;
  wire [1:0][31:0]                                                              _GEN_1 =
    {{Register_inst14}, {Register_inst14 + 32'h4}};
  reg
    Register_inst13;
  reg  [31:0]
    Register_inst4;
  reg  [31:0]
    Register_inst2;
  reg  [1:0]
    Register_inst8;
  wire                                                                          rs2_hazard
    =
    Register_inst9 & (|(Register_inst0[24:20]))
    & Register_inst0[24:20] == Register_inst2[11:7] & Register_inst8 == 2'h0;
  wire [1:0][31:0]                                                              _GEN_2 =
    {{Register_inst4}, {_RegFile_inst0_rdata2}};
  wire                                                                          is_nop =
    Register_inst13 | ctrl_inst_kill | _BrCondArea_inst0_taken | _CSRGen_inst0_expt;
  wire [31:0]                                                                   _GEN_3 =
    dcache_resp.data.data >> {27'h0, Register_inst4[1:0], 3'h0};
  wire [1:0][31:0]                                                              _GEN_4 =
    {{{{17{_GEN_3[15]}}, _GEN_3[14:0]}}, {dcache_resp.data.data}};
  wire [1:0][31:0]                                                              _GEN_5 =
    {{{16'h0, _GEN_3[15:0]}}, {_GEN_4[Register_inst7 == 3'h2]}};
  wire [1:0][31:0]                                                              _GEN_6 =
    {{{{25{_GEN_3[7]}}, _GEN_3[6:0]}}, {_GEN_5[Register_inst7 == 3'h4]}};
  wire [1:0][31:0]                                                              _GEN_7 =
    {{{24'h0, _GEN_3[7:0]}}, {_GEN_6[Register_inst7 == 3'h3]}};
  wire [1:0][31:0]                                                              _GEN_8 =
    {{_GEN_7[Register_inst7 == 3'h5]}, {Register_inst4}};
  wire [1:0][31:0]                                                              _GEN_9 =
    {{Register_inst3 + 32'h4}, {_GEN_8[Register_inst8 == 2'h1]}};
  wire [1:0][31:0]                                                              _GEN_10 =
    {{_CSRGen_inst0_O}, {_GEN_9[Register_inst8 == 2'h2]}};
  wire                                                                          rs1_hazard
    =
    Register_inst9 & (|(Register_inst0[19:15]))
    & Register_inst0[19:15] == Register_inst2[11:7] & Register_inst8 == 2'h0;
  wire [1:0][31:0]                                                              _GEN_11 =
    {{Register_inst4}, {_RegFile_inst0_rdata1}};
  wire [1:0][31:0]                                                              _GEN_12 =
    {{_GEN_11[rs1_hazard]}, {Register_inst1}};
  wire [1:0][31:0]                                                              _GEN_13 =
    {{_GEN_2[rs2_hazard]}, {_ImmGenWire_inst0_O}};
  wire                                                                          take_sum =
    ctrl_pc_sel == 2'h1 | _BrCondArea_inst0_taken;
  wire [1:0][31:0]                                                              _GEN_14 =
    {{{_ALUArea_inst0_sum_[31:1], 1'h0}}, {_GEN_1[ctrl_pc_sel == 2'h2]}};
  wire [1:0][31:0]                                                              _GEN_15 =
    {{_CSRGen_inst0_epc}, {_GEN_14[take_sum]}};
  wire [1:0][31:0]                                                              _GEN_16 =
    {{_CSRGen_inst0_evec}, {_GEN_15[&ctrl_pc_sel]}};
  wire [1:0][31:0]                                                              _GEN_17 =
    {{Register_inst14}, {_GEN_16[_CSRGen_inst0_expt]}};
  reg  [31:0]
    Register_inst5;
  reg  [1:0]                                                                    _GEN_18;
  reg  [2:0]                                                                    _GEN_19;
  reg                                                                           _GEN_20;
  reg  [2:0]                                                                    _GEN_21;
  reg                                                                           _GEN_22;
  reg                                                                           _GEN_23;
  reg  [31:0]                                                                   _GEN_24;
  reg                                                                           _GEN_25;
  reg                                                                           _GEN_26;
  reg                                                                           _GEN_27;
  reg                                                                           _GEN_28;
  reg                                                                           _GEN_29;
  reg                                                                           _GEN_30;
  reg                                                                           _GEN_31;
  reg                                                                           _GEN_32;
  reg                                                                           _GEN_33;
  reg                                                                           _GEN_34;
  reg                                                                           _GEN_35;
  reg                                                                           _GEN_36;
  reg                                                                           _GEN_37;
  reg                                                                           _GEN_38;
  reg                                                                           _GEN_39;
  reg                                                                           _GEN_40;
  reg                                                                           _GEN_41;
  reg                                                                           _GEN_42;
  reg                                                                           _GEN_43;
  reg                                                                           _GEN_44;
  reg                                                                           _GEN_45;
  reg                                                                           _GEN_46;
  reg                                                                           _GEN_47;
  reg                                                                           _GEN_48;
  reg                                                                           _GEN_49;
  reg                                                                           _GEN_50;
  reg                                                                           _GEN_51;
  reg                                                                           _GEN_52;
  reg                                                                           _GEN_53;
  reg                                                                           _GEN_54;
  reg                                                                           _GEN_55;
  reg                                                                           _GEN_56;
  reg  [31:0]                                                                   _GEN_57;
  reg  [31:0]                                                                   _GEN_58;
  reg  [1:0]                                                                    _GEN_59;
  wire [1:0][31:0]                                                              _GEN_60 =
    {{_ImmGenWire_inst0_O}, {_GEN_11[rs1_hazard]}};
  always_comb begin
    _GEN_18 = Register_inst6;
    _GEN_19 = Register_inst7;
    _GEN_20 = Register_inst9;
    _GEN_21 = Register_inst10;
    _GEN_22 = Register_inst11;
    _GEN_23 = Register_inst12;
    _GEN_24 = Register_inst3;
    _GEN_25 = Register_inst2[0];
    _GEN_26 = Register_inst2[1];
    _GEN_27 = Register_inst2[2];
    _GEN_28 = Register_inst2[3];
    _GEN_29 = Register_inst2[4];
    _GEN_30 = Register_inst2[5];
    _GEN_31 = Register_inst2[6];
    _GEN_32 = Register_inst2[7];
    _GEN_33 = Register_inst2[8];
    _GEN_34 = Register_inst2[9];
    _GEN_35 = Register_inst2[10];
    _GEN_36 = Register_inst2[11];
    _GEN_37 = Register_inst2[12];
    _GEN_38 = Register_inst2[13];
    _GEN_39 = Register_inst2[14];
    _GEN_40 = Register_inst2[15];
    _GEN_41 = Register_inst2[16];
    _GEN_42 = Register_inst2[17];
    _GEN_43 = Register_inst2[18];
    _GEN_44 = Register_inst2[19];
    _GEN_45 = Register_inst2[20];
    _GEN_46 = Register_inst2[21];
    _GEN_47 = Register_inst2[22];
    _GEN_48 = Register_inst2[23];
    _GEN_49 = Register_inst2[24];
    _GEN_50 = Register_inst2[25];
    _GEN_51 = Register_inst2[26];
    _GEN_52 = Register_inst2[27];
    _GEN_53 = Register_inst2[28];
    _GEN_54 = Register_inst2[29];
    _GEN_55 = Register_inst2[30];
    _GEN_56 = Register_inst2[31];
    _GEN_57 = Register_inst4;
    _GEN_58 = Register_inst5;
    _GEN_59 = Register_inst8;
    if (RESET | ~_GEN_0 & _CSRGen_inst0_expt) begin
      _GEN_18 = 2'h0;
      _GEN_19 = 3'h0;
      _GEN_20 = 1'h0;
      _GEN_21 = 3'h0;
      _GEN_22 = 1'h0;
      _GEN_23 = 1'h0;
    end
    else if (~_GEN_0 & ~_CSRGen_inst0_expt) begin
      _GEN_24 = Register_inst1;
      _GEN_25 = Register_inst0[0];
      _GEN_26 = Register_inst0[1];
      _GEN_27 = Register_inst0[2];
      _GEN_28 = Register_inst0[3];
      _GEN_29 = Register_inst0[4];
      _GEN_30 = Register_inst0[5];
      _GEN_31 = Register_inst0[6];
      _GEN_32 = Register_inst0[7];
      _GEN_33 = Register_inst0[8];
      _GEN_34 = Register_inst0[9];
      _GEN_35 = Register_inst0[10];
      _GEN_36 = Register_inst0[11];
      _GEN_37 = Register_inst0[12];
      _GEN_38 = Register_inst0[13];
      _GEN_39 = Register_inst0[14];
      _GEN_40 = Register_inst0[15];
      _GEN_41 = Register_inst0[16];
      _GEN_42 = Register_inst0[17];
      _GEN_43 = Register_inst0[18];
      _GEN_44 = Register_inst0[19];
      _GEN_45 = Register_inst0[20];
      _GEN_46 = Register_inst0[21];
      _GEN_47 = Register_inst0[22];
      _GEN_48 = Register_inst0[23];
      _GEN_49 = Register_inst0[24];
      _GEN_50 = Register_inst0[25];
      _GEN_51 = Register_inst0[26];
      _GEN_52 = Register_inst0[27];
      _GEN_53 = Register_inst0[28];
      _GEN_54 = Register_inst0[29];
      _GEN_55 = Register_inst0[30];
      _GEN_56 = Register_inst0[31];
      _GEN_57 = _ALUArea_inst0_O;
      _GEN_58 = _GEN_60[ctrl_imm_sel == 3'h6];
      _GEN_18 = ctrl_st_type;
      _GEN_19 = ctrl_ld_type;
      _GEN_59 = ctrl_wb_sel;
      _GEN_20 = ctrl_wb_en;
      _GEN_21 = ctrl_csr_cmd;
      _GEN_22 = ctrl_illegal;
      _GEN_23 = ctrl_pc_sel == 2'h1;
    end
  end // always_comb
  wire [1:0][31:0]                                                              _GEN_61 =
    {{32'h13}, {icache_resp.data.data}};
  always_ff @(posedge CLK) begin
    Register_inst6 <= _GEN_18;
    Register_inst7 <= _GEN_19;
    Register_inst9 <= _GEN_20;
    Register_inst11 <= _GEN_22;
    Register_inst12 <= _GEN_23;
    Register_inst3 <= _GEN_24;
    Register_inst13 <= RESET;
    Register_inst4 <= _GEN_57;
    Register_inst2 <=
      {_GEN_56,
       _GEN_55,
       _GEN_54,
       _GEN_53,
       _GEN_52,
       _GEN_51,
       _GEN_50,
       _GEN_49,
       _GEN_48,
       _GEN_47,
       _GEN_46,
       _GEN_45,
       _GEN_44,
       _GEN_43,
       _GEN_42,
       _GEN_41,
       _GEN_40,
       _GEN_39,
       _GEN_38,
       _GEN_37,
       _GEN_36,
       _GEN_35,
       _GEN_34,
       _GEN_33,
       _GEN_32,
       _GEN_31,
       _GEN_30,
       _GEN_29,
       _GEN_28,
       _GEN_27,
       _GEN_26,
       _GEN_25};
    Register_inst8 <= _GEN_59;
    if (~_GEN_0)
      Register_inst0 <= _GEN_61[is_nop];
    Register_inst14 <= _GEN_17[_GEN_0];
    if (~_GEN_0)
      Register_inst1 <= Register_inst14;
    Register_inst5 <= _GEN_58;
    Register_inst10 <= _GEN_21;
  end // always_ff @(posedge)
  initial begin
    Register_inst6 = 2'h0;
    Register_inst7 = 3'h0;
    Register_inst9 = 1'h0;
    Register_inst11 = 1'h0;
    Register_inst12 = 1'h0;
    Register_inst3 = 32'h0;
    Register_inst13 = 1'h0;
    Register_inst4 = 32'h0;
    Register_inst2 = 32'h13;
    Register_inst8 = 2'h0;
    Register_inst0 = 32'h13;
    Register_inst14 = 32'h1FC;
    Register_inst1 = 32'h0;
    Register_inst5 = 32'h0;
    Register_inst10 = 3'h0;
  end // initial
  wire struct packed {logic [31:0] addr; logic [31:0] data; logic [3:0] mask; } _GEN_62 =
    '{addr: _GEN_17[_GEN_0], data: (32'h0), mask: (4'h0)};
  wire [1:0][31:0]                                                              _GEN_63 =
    {{Register_inst4}, {_ALUArea_inst0_sum_}};
  wire [1:0][1:0]                                                               _GEN_64 =
    {{Register_inst6}, {ctrl_st_type}};
  wire [1:0][3:0]                                                               _GEN_65 =
    {{4'h3 << _ALUArea_inst0_sum_[1:0]}, {_GEN[_GEN_64[_GEN_0] == 2'h1]}};
  wire [1:0][3:0]                                                               _GEN_66 =
    {{4'h1 << _ALUArea_inst0_sum_[1:0]}, {_GEN_65[_GEN_64[_GEN_0] == 2'h2]}};
  wire struct packed {logic [31:0] addr; logic [31:0] data; logic [3:0] mask; } _GEN_67 =
    '{addr: {_GEN_63[_GEN_0][31:2], 2'h0},
      data: (_GEN_2[rs2_hazard] << {27'h0, _ALUArea_inst0_sum_[1:0], 3'h0}),
      mask: _GEN_66[&_GEN_64[_GEN_0]]};
  BrCondArea BrCondArea_inst0 (
    .rs1     (_GEN_11[rs1_hazard]),
    .rs2     (_GEN_2[rs2_hazard]),
    .br_type (ctrl_br_type),
    .taken   (_BrCondArea_inst0_taken)
  );
  RegFile RegFile_inst0 (
    .raddr1 (Register_inst0[19:15]),
    .raddr2 (Register_inst0[24:20]),
    .wen    (Register_inst9 & ~_GEN_0 & ~_CSRGen_inst0_expt),
    .waddr  (Register_inst2[11:7]),
    .wdata  (_GEN_10[&Register_inst8]),
    .CLK    (CLK),
    .RESET  (RESET),
    .rdata1 (_RegFile_inst0_rdata1),
    .rdata2 (_RegFile_inst0_rdata2)
  );
  ImmGenWire ImmGenWire_inst0 (
    .inst (Register_inst0),
    .sel  (ctrl_imm_sel),
    .O    (_ImmGenWire_inst0_O)
  );
  ALUArea ALUArea_inst0 (
    .A    (_GEN_12[ctrl_A_sel]),
    .B    (_GEN_13[ctrl_B_sel]),
    .op   (ctrl_alu_op),
    .O    (_ALUArea_inst0_O),
    .sum_ (_ALUArea_inst0_sum_)
  );
  CSRGen CSRGen_inst0 (
    .stall         (_GEN_0),
    .cmd           (Register_inst10),
    .I             (Register_inst5),
    .pc            (Register_inst3),
    .addr          (Register_inst4),
    .inst          (Register_inst2),
    .illegal       (Register_inst11),
    .st_type       (Register_inst6),
    .ld_type       (Register_inst7),
    .pc_check      (Register_inst12),
    .host_fromhost (host_fromhost),
    .CLK           (CLK),
    .RESET         (RESET),
    .O             (_CSRGen_inst0_O),
    .expt          (_CSRGen_inst0_expt),
    .evec          (_CSRGen_inst0_evec),
    .epc           (_CSRGen_inst0_epc),
    .host_tohost   (host_tohost)
  );
  assign icache_abort = 1'h0;
  assign icache_req = '{valid: (~_GEN_0), data: _GEN_62};
  assign dcache_abort = _CSRGen_inst0_expt;
  assign dcache_req =
    '{valid: (~_GEN_0 & ((|ctrl_st_type) | (|ctrl_ld_type))), data: _GEN_67};
  assign ctrl_inst = Register_inst0;
endmodule

module Control(
  input  [31:0] inst,
  output [1:0]  pc_sel,
  output        inst_kill,
                A_sel,
                B_sel,
  output [2:0]  imm_sel,
  output [3:0]  alu_op,
  output [2:0]  br_type,
  output [1:0]  st_type,
  output [2:0]  ld_type,
  output [1:0]  wb_sel,
  output        wb_en,
  output [2:0]  csr_cmd,
  output        illegal
);

  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN =
    '{_0: 2'h0,
      _1: 1'h0,
      _2: 1'h0,
      _3: 3'h0,
      _4: 4'hF,
      _5: 3'h0,
      _6: 1'h0,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h0,
      _10: 1'h0,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_0 =
    '{_0: 2'h3,
      _1: 1'h0,
      _2: 1'h0,
      _3: 3'h0,
      _4: 4'hF,
      _5: 3'h0,
      _6: 1'h1,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h3,
      _10: 1'h0,
      _11: 3'h4,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_1 =
    '{_0: 2'h0,
      _1: 1'h0,
      _2: 1'h0,
      _3: 3'h0,
      _4: 4'hF,
      _5: 3'h0,
      _6: 1'h0,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h3,
      _10: 1'h0,
      _11: 3'h4,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_2 =
    '{_0: 2'h2,
      _1: 1'h0,
      _2: 1'h0,
      _3: 3'h6,
      _4: 4'hF,
      _5: 3'h0,
      _6: 1'h1,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h3,
      _10: 1'h1,
      _11: 3'h3,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_3 =
    '{_0: 2'h2,
      _1: 1'h0,
      _2: 1'h0,
      _3: 3'h6,
      _4: 4'hF,
      _5: 3'h0,
      _6: 1'h1,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h3,
      _10: 1'h1,
      _11: 3'h2,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_4 =
    '{_0: 2'h2,
      _1: 1'h0,
      _2: 1'h0,
      _3: 3'h6,
      _4: 4'hF,
      _5: 3'h0,
      _6: 1'h1,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h3,
      _10: 1'h1,
      _11: 3'h1,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_5 =
    '{_0: 2'h2,
      _1: 1'h1,
      _2: 1'h0,
      _3: 3'h0,
      _4: 4'hA,
      _5: 3'h0,
      _6: 1'h1,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h3,
      _10: 1'h1,
      _11: 3'h3,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_6 =
    '{_0: 2'h2,
      _1: 1'h1,
      _2: 1'h0,
      _3: 3'h0,
      _4: 4'hA,
      _5: 3'h0,
      _6: 1'h1,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h3,
      _10: 1'h1,
      _11: 3'h2,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_7 =
    '{_0: 2'h2,
      _1: 1'h1,
      _2: 1'h0,
      _3: 3'h0,
      _4: 4'hA,
      _5: 3'h0,
      _6: 1'h1,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h3,
      _10: 1'h1,
      _11: 3'h1,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_8 =
    '{_0: 2'h2,
      _1: 1'h0,
      _2: 1'h0,
      _3: 3'h0,
      _4: 4'hF,
      _5: 3'h0,
      _6: 1'h1,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h0,
      _10: 1'h0,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_9 =
    '{_0: 2'h0,
      _1: 1'h1,
      _2: 1'h1,
      _3: 3'h0,
      _4: 4'h2,
      _5: 3'h0,
      _6: 1'h0,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h0,
      _10: 1'h1,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_10 =
    '{_0: 2'h0,
      _1: 1'h1,
      _2: 1'h1,
      _3: 3'h0,
      _4: 4'h3,
      _5: 3'h0,
      _6: 1'h0,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h0,
      _10: 1'h1,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_11 =
    '{_0: 2'h0,
      _1: 1'h1,
      _2: 1'h1,
      _3: 3'h0,
      _4: 4'h9,
      _5: 3'h0,
      _6: 1'h0,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h0,
      _10: 1'h1,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_12 =
    '{_0: 2'h0,
      _1: 1'h1,
      _2: 1'h1,
      _3: 3'h0,
      _4: 4'h8,
      _5: 3'h0,
      _6: 1'h0,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h0,
      _10: 1'h1,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_13 =
    '{_0: 2'h0,
      _1: 1'h1,
      _2: 1'h1,
      _3: 3'h0,
      _4: 4'h4,
      _5: 3'h0,
      _6: 1'h0,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h0,
      _10: 1'h1,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_14 =
    '{_0: 2'h0,
      _1: 1'h1,
      _2: 1'h1,
      _3: 3'h0,
      _4: 4'h7,
      _5: 3'h0,
      _6: 1'h0,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h0,
      _10: 1'h1,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_15 =
    '{_0: 2'h0,
      _1: 1'h1,
      _2: 1'h1,
      _3: 3'h0,
      _4: 4'h5,
      _5: 3'h0,
      _6: 1'h0,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h0,
      _10: 1'h1,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_16 =
    '{_0: 2'h0,
      _1: 1'h1,
      _2: 1'h1,
      _3: 3'h0,
      _4: 4'h6,
      _5: 3'h0,
      _6: 1'h0,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h0,
      _10: 1'h1,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_17 =
    '{_0: 2'h0,
      _1: 1'h1,
      _2: 1'h1,
      _3: 3'h0,
      _4: 4'h1,
      _5: 3'h0,
      _6: 1'h0,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h0,
      _10: 1'h1,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_18 =
    '{_0: 2'h0,
      _1: 1'h1,
      _2: 1'h1,
      _3: 3'h0,
      _4: 4'h0,
      _5: 3'h0,
      _6: 1'h0,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h0,
      _10: 1'h1,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_19 =
    '{_0: 2'h0,
      _1: 1'h1,
      _2: 1'h0,
      _3: 3'h1,
      _4: 4'h9,
      _5: 3'h0,
      _6: 1'h0,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h0,
      _10: 1'h1,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_20 =
    '{_0: 2'h0,
      _1: 1'h1,
      _2: 1'h0,
      _3: 3'h1,
      _4: 4'h8,
      _5: 3'h0,
      _6: 1'h0,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h0,
      _10: 1'h1,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_21 =
    '{_0: 2'h0,
      _1: 1'h1,
      _2: 1'h0,
      _3: 3'h1,
      _4: 4'h6,
      _5: 3'h0,
      _6: 1'h0,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h0,
      _10: 1'h1,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_22 =
    '{_0: 2'h0,
      _1: 1'h1,
      _2: 1'h0,
      _3: 3'h1,
      _4: 4'h2,
      _5: 3'h0,
      _6: 1'h0,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h0,
      _10: 1'h1,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_23 =
    '{_0: 2'h0,
      _1: 1'h1,
      _2: 1'h0,
      _3: 3'h1,
      _4: 4'h3,
      _5: 3'h0,
      _6: 1'h0,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h0,
      _10: 1'h1,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_24 =
    '{_0: 2'h0,
      _1: 1'h1,
      _2: 1'h0,
      _3: 3'h1,
      _4: 4'h4,
      _5: 3'h0,
      _6: 1'h0,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h0,
      _10: 1'h1,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_25 =
    '{_0: 2'h0,
      _1: 1'h1,
      _2: 1'h0,
      _3: 3'h1,
      _4: 4'h7,
      _5: 3'h0,
      _6: 1'h0,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h0,
      _10: 1'h1,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_26 =
    '{_0: 2'h0,
      _1: 1'h1,
      _2: 1'h0,
      _3: 3'h1,
      _4: 4'h5,
      _5: 3'h0,
      _6: 1'h0,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h0,
      _10: 1'h1,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_27 =
    '{_0: 2'h0,
      _1: 1'h1,
      _2: 1'h0,
      _3: 3'h1,
      _4: 4'h0,
      _5: 3'h0,
      _6: 1'h0,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h0,
      _10: 1'h1,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_28 =
    '{_0: 2'h0,
      _1: 1'h1,
      _2: 1'h0,
      _3: 3'h2,
      _4: 4'h0,
      _5: 3'h0,
      _6: 1'h0,
      _7: 2'h1,
      _8: 3'h0,
      _9: 2'h0,
      _10: 1'h0,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_29 =
    '{_0: 2'h0,
      _1: 1'h1,
      _2: 1'h0,
      _3: 3'h2,
      _4: 4'h0,
      _5: 3'h0,
      _6: 1'h0,
      _7: 2'h2,
      _8: 3'h0,
      _9: 2'h0,
      _10: 1'h0,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_30 =
    '{_0: 2'h0,
      _1: 1'h1,
      _2: 1'h0,
      _3: 3'h2,
      _4: 4'h0,
      _5: 3'h0,
      _6: 1'h0,
      _7: 2'h3,
      _8: 3'h0,
      _9: 2'h0,
      _10: 1'h0,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_31 =
    '{_0: 2'h2,
      _1: 1'h1,
      _2: 1'h0,
      _3: 3'h1,
      _4: 4'h0,
      _5: 3'h0,
      _6: 1'h1,
      _7: 2'h0,
      _8: 3'h4,
      _9: 2'h1,
      _10: 1'h1,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_32 =
    '{_0: 2'h2,
      _1: 1'h1,
      _2: 1'h0,
      _3: 3'h1,
      _4: 4'h0,
      _5: 3'h0,
      _6: 1'h1,
      _7: 2'h0,
      _8: 3'h5,
      _9: 2'h1,
      _10: 1'h1,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_33 =
    '{_0: 2'h2,
      _1: 1'h1,
      _2: 1'h0,
      _3: 3'h1,
      _4: 4'h0,
      _5: 3'h0,
      _6: 1'h1,
      _7: 2'h0,
      _8: 3'h1,
      _9: 2'h1,
      _10: 1'h1,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_34 =
    '{_0: 2'h2,
      _1: 1'h1,
      _2: 1'h0,
      _3: 3'h1,
      _4: 4'h0,
      _5: 3'h0,
      _6: 1'h1,
      _7: 2'h0,
      _8: 3'h2,
      _9: 2'h1,
      _10: 1'h1,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_35 =
    '{_0: 2'h2,
      _1: 1'h1,
      _2: 1'h0,
      _3: 3'h1,
      _4: 4'h0,
      _5: 3'h0,
      _6: 1'h1,
      _7: 2'h0,
      _8: 3'h3,
      _9: 2'h1,
      _10: 1'h1,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_36 =
    '{_0: 2'h0,
      _1: 1'h0,
      _2: 1'h0,
      _3: 3'h5,
      _4: 4'h0,
      _5: 3'h4,
      _6: 1'h0,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h0,
      _10: 1'h0,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_37 =
    '{_0: 2'h0,
      _1: 1'h0,
      _2: 1'h0,
      _3: 3'h5,
      _4: 4'h0,
      _5: 3'h1,
      _6: 1'h0,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h0,
      _10: 1'h0,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_38 =
    '{_0: 2'h0,
      _1: 1'h0,
      _2: 1'h0,
      _3: 3'h5,
      _4: 4'h0,
      _5: 3'h5,
      _6: 1'h0,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h0,
      _10: 1'h0,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_39 =
    '{_0: 2'h0,
      _1: 1'h0,
      _2: 1'h0,
      _3: 3'h5,
      _4: 4'h0,
      _5: 3'h2,
      _6: 1'h0,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h0,
      _10: 1'h0,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_40 =
    '{_0: 2'h0,
      _1: 1'h0,
      _2: 1'h0,
      _3: 3'h5,
      _4: 4'h0,
      _5: 3'h6,
      _6: 1'h0,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h0,
      _10: 1'h0,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_41 =
    '{_0: 2'h0,
      _1: 1'h0,
      _2: 1'h0,
      _3: 3'h5,
      _4: 4'h0,
      _5: 3'h3,
      _6: 1'h0,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h0,
      _10: 1'h0,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_42 =
    '{_0: 2'h1,
      _1: 1'h1,
      _2: 1'h0,
      _3: 3'h1,
      _4: 4'h0,
      _5: 3'h0,
      _6: 1'h1,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h2,
      _10: 1'h1,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_43 =
    '{_0: 2'h1,
      _1: 1'h0,
      _2: 1'h0,
      _3: 3'h4,
      _4: 4'h0,
      _5: 3'h0,
      _6: 1'h1,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h2,
      _10: 1'h1,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_44 =
    '{_0: 2'h0,
      _1: 1'h0,
      _2: 1'h0,
      _3: 3'h3,
      _4: 4'h0,
      _5: 3'h0,
      _6: 1'h0,
      _7: 2'h0,
      _8: 3'h0,
      _9: 2'h0,
      _10: 1'h1,
      _11: 3'h0,
      _12: 1'h0};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_45 =
    '{'{_0: 2'h0,
        _1: 1'h0,
        _2: 1'h0,
        _3: 3'h3,
        _4: 4'hB,
        _5: 3'h0,
        _6: 1'h0,
        _7: 2'h0,
        _8: 3'h0,
        _9: 2'h0,
        _10: 1'h1,
        _11: 3'h0,
        _12: 1'h0},
      '{_0: 2'h0,
        _1: 1'h0,
        _2: 1'h0,
        _3: 3'h0,
        _4: 4'hF,
        _5: 3'h0,
        _6: 1'h0,
        _7: 2'h0,
        _8: 3'h0,
        _9: 2'h0,
        _10: 1'h0,
        _11: 3'h0,
        _12: 1'h1}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_46 = {{_GEN_44}, {_GEN_45[inst[6:0] == 7'h37]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_47 = {{_GEN_43}, {_GEN_46[inst[6:0] == 7'h17]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_48 = {{_GEN_42}, {_GEN_47[inst[6:0] == 7'h6F]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_49 = {{_GEN_41}, {_GEN_48[{inst[14:12], inst[6:0]} == 10'h67]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_50 = {{_GEN_40}, {_GEN_49[{inst[14:12], inst[6:0]} == 10'h63]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_51 = {{_GEN_39}, {_GEN_50[{inst[14:12], inst[6:0]} == 10'hE3]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_52 = {{_GEN_38}, {_GEN_51[{inst[14:12], inst[6:0]} == 10'h263]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_53 = {{_GEN_37}, {_GEN_52[{inst[14:12], inst[6:0]} == 10'h2E3]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_54 = {{_GEN_36}, {_GEN_53[{inst[14:12], inst[6:0]} == 10'h363]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_55 = {{_GEN_35}, {_GEN_54[{inst[14:12], inst[6:0]} == 10'h3E3]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_56 = {{_GEN_34}, {_GEN_55[{inst[14:12], inst[6:0]} == 10'h3]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_57 = {{_GEN_33}, {_GEN_56[{inst[14:12], inst[6:0]} == 10'h83]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_58 = {{_GEN_32}, {_GEN_57[{inst[14:12], inst[6:0]} == 10'h103]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_59 = {{_GEN_31}, {_GEN_58[{inst[14:12], inst[6:0]} == 10'h203]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_60 = {{_GEN_30}, {_GEN_59[{inst[14:12], inst[6:0]} == 10'h283]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_61 = {{_GEN_29}, {_GEN_60[{inst[14:12], inst[6:0]} == 10'h23]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_62 = {{_GEN_28}, {_GEN_61[{inst[14:12], inst[6:0]} == 10'hA3]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_63 = {{_GEN_27}, {_GEN_62[{inst[14:12], inst[6:0]} == 10'h123]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_64 = {{_GEN_26}, {_GEN_63[{inst[14:12], inst[6:0]} == 10'h13]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_65 = {{_GEN_25}, {_GEN_64[{inst[14:12], inst[6:0]} == 10'h113]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_66 = {{_GEN_24}, {_GEN_65[{inst[14:12], inst[6:0]} == 10'h193]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_67 = {{_GEN_23}, {_GEN_66[{inst[14:12], inst[6:0]} == 10'h213]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_68 = {{_GEN_22}, {_GEN_67[{inst[14:12], inst[6:0]} == 10'h313]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_69 = {{_GEN_21}, {_GEN_68[{inst[14:12], inst[6:0]} == 10'h393]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_70 = {{_GEN_20}, {_GEN_69[{inst[31:25], inst[14:12], inst[6:0]} == 17'h93]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_71 = {{_GEN_19}, {_GEN_70[{inst[31:25], inst[14:12], inst[6:0]} == 17'h293]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_72 = {{_GEN_18}, {_GEN_71[{inst[31:25], inst[14:12], inst[6:0]} == 17'h8293]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_73 = {{_GEN_17}, {_GEN_72[{inst[31:25], inst[14:12], inst[6:0]} == 17'h33]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_74 = {{_GEN_16}, {_GEN_73[{inst[31:25], inst[14:12], inst[6:0]} == 17'h8033]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_75 = {{_GEN_15}, {_GEN_74[{inst[31:25], inst[14:12], inst[6:0]} == 17'hB3]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_76 = {{_GEN_14}, {_GEN_75[{inst[31:25], inst[14:12], inst[6:0]} == 17'h133]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_77 = {{_GEN_13}, {_GEN_76[{inst[31:25], inst[14:12], inst[6:0]} == 17'h1B3]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_78 = {{_GEN_12}, {_GEN_77[{inst[31:25], inst[14:12], inst[6:0]} == 17'h233]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_79 = {{_GEN_11}, {_GEN_78[{inst[31:25], inst[14:12], inst[6:0]} == 17'h2B3]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_80 = {{_GEN_10}, {_GEN_79[{inst[31:25], inst[14:12], inst[6:0]} == 17'h82B3]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_81 = {{_GEN_9}, {_GEN_80[{inst[31:25], inst[14:12], inst[6:0]} == 17'h333]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_82 = {{_GEN}, {_GEN_81[{inst[31:25], inst[14:12], inst[6:0]} == 17'h3B3]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_83 = {{_GEN_8}, {_GEN_82[{inst[31:28], inst[19:0]} == 24'hF]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_84 = {{_GEN_7}, {_GEN_83[inst == 32'h100F]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_85 = {{_GEN_6}, {_GEN_84[{inst[14:12], inst[6:0]} == 10'hF3]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_86 = {{_GEN_5}, {_GEN_85[{inst[14:12], inst[6:0]} == 10'h173]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_87 = {{_GEN_4}, {_GEN_86[{inst[14:12], inst[6:0]} == 10'h1F3]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_88 = {{_GEN_3}, {_GEN_87[{inst[14:12], inst[6:0]} == 10'h2F3]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_89 = {{_GEN_2}, {_GEN_88[{inst[14:12], inst[6:0]} == 10'h373]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_90 = {{_GEN_1}, {_GEN_89[{inst[14:12], inst[6:0]} == 10'h3F3]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_91 = {{_GEN_1}, {_GEN_90[inst == 32'h73]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_92 = {{_GEN_0}, {_GEN_91[inst == 32'h100073]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }[1:0]
    _GEN_93 = {{_GEN}, {_GEN_92[inst == 32'h10000073]}};
  wire
    struct packed {logic [1:0] _0; logic _1; logic _2; logic [2:0] _3; logic [3:0] _4; logic [2:0] _5; logic _6; logic [1:0] _7; logic [2:0] _8; logic [1:0] _9; logic _10; logic [2:0] _11; logic _12; }
    _GEN_94 = _GEN_93[inst == 32'h10200073];
  assign pc_sel = _GEN_94._0;
  assign inst_kill = _GEN_94._6;
  assign A_sel = _GEN_94._1;
  assign B_sel = _GEN_94._2;
  assign imm_sel = _GEN_94._3;
  assign alu_op = _GEN_94._4;
  assign br_type = _GEN_94._5;
  assign st_type = _GEN_94._7;
  assign ld_type = _GEN_94._8;
  assign wb_sel = _GEN_94._9;
  assign wb_en = _GEN_94._10;
  assign csr_cmd = _GEN_94._11;
  assign illegal = _GEN_94._12;
endmodule

module Core(
  input  struct packed {logic valid; logic [31:0] data; }                                                             host_fromhost,
  input  struct packed {logic valid; struct packed {logic [31:0] data; } data; }                                      icache_resp,
                                                                                                                      dcache_resp,
  input                                                                                                               CLK,
                                                                                                                      RESET,
  output [31:0]                                                                                                       host_tohost,
  output                                                                                                              icache_abort,
  output struct packed {logic valid; struct packed {logic [31:0] addr; logic [31:0] data; logic [3:0] mask; } data; } icache_req,
  output                                                                                                              dcache_abort,
  output struct packed {logic valid; struct packed {logic [31:0] addr; logic [31:0] data; logic [3:0] mask; } data; } dcache_req
);

  wire [31:0] _Datapath_inst0_ctrl_inst;
  wire [1:0]  _Control_inst0_pc_sel;
  wire        _Control_inst0_inst_kill;
  wire        _Control_inst0_A_sel;
  wire        _Control_inst0_B_sel;
  wire [2:0]  _Control_inst0_imm_sel;
  wire [3:0]  _Control_inst0_alu_op;
  wire [2:0]  _Control_inst0_br_type;
  wire [1:0]  _Control_inst0_st_type;
  wire [2:0]  _Control_inst0_ld_type;
  wire [1:0]  _Control_inst0_wb_sel;
  wire        _Control_inst0_wb_en;
  wire [2:0]  _Control_inst0_csr_cmd;
  wire        _Control_inst0_illegal;
  Control Control_inst0 (
    .inst      (_Datapath_inst0_ctrl_inst),
    .pc_sel    (_Control_inst0_pc_sel),
    .inst_kill (_Control_inst0_inst_kill),
    .A_sel     (_Control_inst0_A_sel),
    .B_sel     (_Control_inst0_B_sel),
    .imm_sel   (_Control_inst0_imm_sel),
    .alu_op    (_Control_inst0_alu_op),
    .br_type   (_Control_inst0_br_type),
    .st_type   (_Control_inst0_st_type),
    .ld_type   (_Control_inst0_ld_type),
    .wb_sel    (_Control_inst0_wb_sel),
    .wb_en     (_Control_inst0_wb_en),
    .csr_cmd   (_Control_inst0_csr_cmd),
    .illegal   (_Control_inst0_illegal)
  );
  Datapath Datapath_inst0 (
    .host_fromhost  (host_fromhost),
    .icache_resp    (icache_resp),
    .dcache_resp    (dcache_resp),
    .ctrl_pc_sel    (_Control_inst0_pc_sel),
    .ctrl_inst_kill (_Control_inst0_inst_kill),
    .ctrl_A_sel     (_Control_inst0_A_sel),
    .ctrl_B_sel     (_Control_inst0_B_sel),
    .ctrl_imm_sel   (_Control_inst0_imm_sel),
    .ctrl_alu_op    (_Control_inst0_alu_op),
    .ctrl_br_type   (_Control_inst0_br_type),
    .ctrl_st_type   (_Control_inst0_st_type),
    .ctrl_ld_type   (_Control_inst0_ld_type),
    .ctrl_wb_sel    (_Control_inst0_wb_sel),
    .ctrl_wb_en     (_Control_inst0_wb_en),
    .ctrl_csr_cmd   (_Control_inst0_csr_cmd),
    .ctrl_illegal   (_Control_inst0_illegal),
    .CLK            (CLK),
    .RESET          (RESET),
    .host_tohost    (host_tohost),
    .icache_abort   (icache_abort),
    .icache_req     (icache_req),
    .dcache_abort   (dcache_abort),
    .dcache_req     (dcache_req),
    .ctrl_inst      (_Datapath_inst0_ctrl_inst)
  );
endmodule

